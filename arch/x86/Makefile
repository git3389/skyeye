# Makefile.in generated by automake 1.11.1 from Makefile.am.
# arch/x86/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/skyeye
pkgincludedir = $(includedir)/skyeye
pkglibdir = $(libdir)/skyeye
pkglibexecdir = $(libexecdir)/skyeye
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
#am__append_1 = gui/win32dialog.cc gui/win32.cc
am__append_2 = gui/x.cc
subdir = arch/x86
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/bochs_config.h $(top_builddir)/ltdlconf.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(pkglibdir)"
LTLIBRARIES = $(pkglib_LTLIBRARIES)
libx86_la_LIBADD =
am__libx86_la_SOURCES_DIST = cpu/3dnow.cc cpu/data_xfer8.cc \
	cpu/proc_ctrl.cc cpu/access32.cc cpu/debugstuff.cc \
	cpu/protect_ctrl.cc cpu/access64.cc cpu/exception.cc \
	cpu/resolver.cc cpu/access.cc cpu/fetchdecode64.cc \
	cpu/ret_far.cc cpu/aes.cc cpu/fetchdecode.cc \
	cpu/segment_ctrl.cc cpu/apic.cc cpu/flag_ctrl.cc \
	cpu/segment_ctrl_pro.cc cpu/arith16.cc cpu/flag_ctrl_pro.cc \
	cpu/shift16.cc cpu/arith32.cc cpu/fpu_emu.cc cpu/shift32.cc \
	cpu/arith64.cc cpu/icache.cc cpu/shift64.cc cpu/arith8.cc \
	cpu/init.cc cpu/shift8.cc cpu/bcd.cc cpu/io.cc cpu/smm.cc \
	cpu/bit16.cc cpu/iret.cc cpu/soft_int.cc cpu/bit32.cc \
	cpu/jmp_far.cc cpu/sse.cc cpu/bit64.cc cpu/lazy_flags.cc \
	cpu/sse_move.cc cpu/bit.cc cpu/load32.cc cpu/sse_pfp.cc \
	cpu/call_far.cc cpu/logical16.cc cpu/sse_rcp.cc cpu/cpu.cc \
	cpu/logical32.cc cpu/sse_string.cc cpu/cpuid.cc \
	cpu/logical64.cc cpu/stack16.cc cpu/crc32.cc cpu/logical8.cc \
	cpu/stack32.cc cpu/ctrl_xfer16.cc cpu/mmx.cc cpu/stack64.cc \
	cpu/ctrl_xfer32.cc cpu/msr.cc cpu/string.cc cpu/ctrl_xfer64.cc \
	cpu/mult16.cc cpu/tasking.cc cpu/ctrl_xfer_pro.cc \
	cpu/mult32.cc cpu/vm8086.cc cpu/data_xfer16.cc cpu/mult64.cc \
	cpu/vmexit.cc cpu/data_xfer32.cc cpu/mult8.cc cpu/vmx.cc \
	cpu/paging.cc cpu/xsave.cc fpu/f2xm1.cc fpu/fprem.cc \
	fpu/fpu_compare.cc fpu/fpu_misc.cc fpu/fsincos.cc \
	fpu/softfloat.cc fpu/softfloatx80.cc fpu/ferr.cc \
	fpu/fpu_arith.cc fpu/fpu_const.cc fpu/fpu_tags.cc fpu/fyl2x.cc \
	fpu/softfloat-round-pack.cc fpu/fpatan.cc fpu/fpu.cc \
	fpu/fpu_load_store.cc fpu/fpu_trans.cc fpu/poly.cc \
	fpu/softfloat-specialize.cc common/x86_arch_interface.cc \
	common/logio.cc common/pc_system.cc common/x86_module.cc \
	common/main.cc common/config.cc common/plugin.cc \
	common/osdep.cc memory/memory.cc memory/misc_mem.cc \
	mach/skyeye_mach_pc.cc iodev/acpi.cc iodev/extfpuirq.cc \
	iodev/scancodes.cc iodev/biosdev.cc iodev/floppy.cc \
	iodev/scsi_device.cc iodev/busmouse.cc iodev/gameport.cc \
	iodev/serial.cc iodev/serial_raw.cc iodev/harddrv.cc \
	iodev/slowdown_timer.cc iodev/cdrom.cc iodev/hdimage.cc \
	iodev/soundlnx.cc iodev/cmos.cc iodev/ioapic.cc \
	iodev/soundosx.cc iodev/iodebug.cc iodev/soundwin.cc \
	iodev/devices.cc iodev/keyboard.cc iodev/speaker.cc \
	iodev/dma.cc iodev/ne2k.cc iodev/svga_cirrus.cc \
	iodev/eth_arpback.cc iodev/parallel.cc iodev/unmapped.cc \
	iodev/eth.cc iodev/pci2isa.cc iodev/usb_common.cc \
	iodev/eth_fbsd.cc iodev/pci.cc iodev/usb_hid.cc \
	iodev/eth_linux.cc iodev/pcidev.cc iodev/usb_hub.cc \
	iodev/eth_null.cc iodev/pci_ide.cc iodev/usb_msd.cc \
	iodev/eth_packetmaker.cc iodev/pcipnic.cc iodev/usb_ohci.cc \
	iodev/eth_tap.cc iodev/pcivga.cc iodev/usb_uhci.cc \
	iodev/eth_tuntap.cc iodev/pic.cc iodev/vga.cc iodev/eth_vde.cc \
	iodev/pit82c54.cc iodev/virt_timer.cc iodev/eth_vnet.cc \
	iodev/pit_wrap.cc iodev/vmware3.cc iodev/eth_win32.cc \
	iodev/sb16.cc iodev/vmware4.cc gui/enh_dbg.cc gui/keymap.cc \
	gui/textconfig.cc gui/gui.cc gui/siminterface.cc \
	gui/win32dialog.cc gui/win32.cc gui/x.cc disasm/dis_decode.cc \
	disasm/resolve.cc disasm/dis_groups.cc disasm/syntax.cc
am__objects_1 = 3dnow.lo data_xfer8.lo proc_ctrl.lo access32.lo \
	debugstuff.lo protect_ctrl.lo access64.lo exception.lo \
	resolver.lo access.lo fetchdecode64.lo ret_far.lo aes.lo \
	fetchdecode.lo segment_ctrl.lo apic.lo flag_ctrl.lo \
	segment_ctrl_pro.lo arith16.lo flag_ctrl_pro.lo shift16.lo \
	arith32.lo fpu_emu.lo shift32.lo arith64.lo icache.lo \
	shift64.lo arith8.lo init.lo shift8.lo bcd.lo io.lo smm.lo \
	bit16.lo iret.lo soft_int.lo bit32.lo jmp_far.lo sse.lo \
	bit64.lo lazy_flags.lo sse_move.lo bit.lo load32.lo sse_pfp.lo \
	call_far.lo logical16.lo sse_rcp.lo cpu.lo logical32.lo \
	sse_string.lo cpuid.lo logical64.lo stack16.lo crc32.lo \
	logical8.lo stack32.lo ctrl_xfer16.lo mmx.lo stack64.lo \
	ctrl_xfer32.lo msr.lo string.lo ctrl_xfer64.lo mult16.lo \
	tasking.lo ctrl_xfer_pro.lo mult32.lo vm8086.lo data_xfer16.lo \
	mult64.lo vmexit.lo data_xfer32.lo mult8.lo vmx.lo paging.lo \
	xsave.lo
am__objects_2 = f2xm1.lo fprem.lo fpu_compare.lo fpu_misc.lo \
	fsincos.lo softfloat.lo softfloatx80.lo ferr.lo fpu_arith.lo \
	fpu_const.lo fpu_tags.lo fyl2x.lo softfloat-round-pack.lo \
	fpatan.lo fpu.lo fpu_load_store.lo fpu_trans.lo poly.lo \
	softfloat-specialize.lo
am__objects_3 = x86_arch_interface.lo logio.lo pc_system.lo \
	x86_module.lo main.lo config.lo plugin.lo osdep.lo
am__objects_4 = memory.lo misc_mem.lo
am__objects_5 = skyeye_mach_pc.lo
am__objects_6 = acpi.lo extfpuirq.lo scancodes.lo biosdev.lo floppy.lo \
	scsi_device.lo busmouse.lo gameport.lo serial.lo serial_raw.lo \
	harddrv.lo slowdown_timer.lo cdrom.lo hdimage.lo soundlnx.lo \
	cmos.lo ioapic.lo soundosx.lo iodebug.lo soundwin.lo \
	devices.lo keyboard.lo speaker.lo dma.lo ne2k.lo \
	svga_cirrus.lo eth_arpback.lo parallel.lo unmapped.lo eth.lo \
	pci2isa.lo usb_common.lo eth_fbsd.lo pci.lo usb_hid.lo \
	eth_linux.lo pcidev.lo usb_hub.lo eth_null.lo pci_ide.lo \
	usb_msd.lo eth_packetmaker.lo pcipnic.lo usb_ohci.lo \
	eth_tap.lo pcivga.lo usb_uhci.lo eth_tuntap.lo pic.lo vga.lo \
	eth_vde.lo pit82c54.lo virt_timer.lo eth_vnet.lo pit_wrap.lo \
	vmware3.lo eth_win32.lo sb16.lo vmware4.lo
#am__objects_7 = win32dialog.lo win32.lo
am__objects_8 = x.lo
am__objects_9 = enh_dbg.lo keymap.lo textconfig.lo gui.lo \
	siminterface.lo $(am__objects_7) $(am__objects_8)
am__objects_10 = dis_decode.lo resolve.lo dis_groups.lo syntax.lo
am_libx86_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_9) $(am__objects_10)
libx86_la_OBJECTS = $(am_libx86_la_OBJECTS)
libx86_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libx86_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/libltdl/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libx86_la_SOURCES)
DIST_SOURCES = $(am__libx86_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ksh/git/skyeye/skyeye/libltdl/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/ksh/git/skyeye/skyeye/libltdl/config/missing --run tar
AR = ar
ARGZ_H = 
AUTOCONF = ${SHELL} /home/ksh/git/skyeye/skyeye/libltdl/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ksh/git/skyeye/skyeye/libltdl/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ksh/git/skyeye/skyeye/libltdl/config/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
COMMON_CFLAGS = -Werror-implicit-function-declaration
COMMON_INCLUDES = -I$(top_srcdir)/common/include -I$(srcdir)/common/
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -g -O2 -D_FILE_OFFSET_BITS=64 -DSTANDALONE -DDEFAULT_INLINE=0
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0  
INCLTDL = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCD_CFLAGS = -DLCD -DGTK_LCD -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
LCD_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0  
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBADD_DL = -ldl 
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = -ldl
LIBADD_SHL_LOAD = 
LIBLTDL = -lltdl
LIBOBJS = 
LIBS = -ldl -lncurses -lpthread -lm -lc 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTDLDEPS = 
LTDLINCL = 
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_CONFIG_H = config.h
LT_DLLOADERS =  libltdl/dlopen.la
LT_DLPREOPEN = -dlpreopen libltdl/dlopen.la 
MAKEINFO = ${SHELL} /home/ksh/git/skyeye/skyeye/libltdl/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = skyeye
PACKAGE_BUGREPORT = skyeye-simulator@googlegroups.com
PACKAGE_NAME = SkyEye
PACKAGE_STRING = SkyEye 1.3.2
PACKAGE_TARNAME = skyeye
PACKAGE_URL = 
PACKAGE_VERSION = 1.3.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.3.2
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/ksh/git/skyeye/skyeye/arch/x86
abs_srcdir = /home/ksh/git/skyeye/skyeye/arch/x86
abs_top_builddir = /home/ksh/git/skyeye/skyeye
abs_top_srcdir = /home/ksh/git/skyeye/skyeye
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ksh/git/skyeye/skyeye/libltdl/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/skyeye
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
x86_mach = mach/skyeye_mach_pc.cc
x86_cpu = cpu/3dnow.cc          cpu/data_xfer8.cc     cpu/proc_ctrl.cc \
cpu/access32.cc       cpu/debugstuff.cc     cpu/protect_ctrl.cc	\
cpu/access64.cc       cpu/exception.cc      cpu/resolver.cc	\
cpu/access.cc         cpu/fetchdecode64.cc  cpu/ret_far.cc	\
cpu/aes.cc            cpu/fetchdecode.cc    cpu/segment_ctrl.cc	\
cpu/apic.cc           cpu/flag_ctrl.cc      cpu/segment_ctrl_pro.cc	\
cpu/arith16.cc        cpu/flag_ctrl_pro.cc  cpu/shift16.cc	\
cpu/arith32.cc        cpu/fpu_emu.cc        cpu/shift32.cc	\
cpu/arith64.cc        cpu/icache.cc         cpu/shift64.cc	\
cpu/arith8.cc         cpu/init.cc           cpu/shift8.cc	\
cpu/bcd.cc            cpu/io.cc             cpu/smm.cc	\
cpu/bit16.cc          cpu/iret.cc           cpu/soft_int.cc	\
cpu/bit32.cc          cpu/jmp_far.cc        cpu/sse.cc		\
cpu/bit64.cc          cpu/lazy_flags.cc     cpu/sse_move.cc	\
cpu/bit.cc            cpu/load32.cc         cpu/sse_pfp.cc	\
cpu/call_far.cc       cpu/logical16.cc      cpu/sse_rcp.cc	\
cpu/cpu.cc            cpu/logical32.cc      cpu/sse_string.cc	\
cpu/cpuid.cc          cpu/logical64.cc      cpu/stack16.cc	\
cpu/crc32.cc          cpu/logical8.cc       cpu/stack32.cc	\
cpu/ctrl_xfer16.cc    cpu/mmx.cc            cpu/stack64.cc	\
cpu/ctrl_xfer32.cc    cpu/msr.cc            cpu/string.cc	\
cpu/ctrl_xfer64.cc    cpu/mult16.cc         cpu/tasking.cc	\
cpu/ctrl_xfer_pro.cc  cpu/mult32.cc         cpu/vm8086.cc	\
cpu/data_xfer16.cc    cpu/mult64.cc         cpu/vmexit.cc	\
cpu/data_xfer32.cc    cpu/mult8.cc          cpu/vmx.cc		\
cpu/paging.cc cpu/xsave.cc

x86_fpu = fpu/f2xm1.cc fpu/fprem.cc fpu/fpu_compare.cc  fpu/fpu_misc.cc   fpu/fsincos.cc  fpu/softfloat.cc fpu/softfloatx80.cc fpu/ferr.cc    fpu/fpu_arith.cc  fpu/fpu_const.cc       fpu/fpu_tags.cc   fpu/fyl2x.cc    fpu/softfloat-round-pack.cc fpu/fpatan.cc  fpu/fpu.cc        fpu/fpu_load_store.cc  fpu/fpu_trans.cc  fpu/poly.cc     fpu/softfloat-specialize.cc
x86_common = common/x86_arch_interface.cc common/logio.cc common/pc_system.cc common/x86_module.cc common/main.cc common/config.cc common/plugin.cc common/osdep.cc
x86_memory = memory/memory.cc memory/misc_mem.cc
x86_iodev = iodev/acpi.cc             iodev/extfpuirq.cc   iodev/scancodes.cc\
iodev/biosdev.cc          iodev/floppy.cc      iodev/scsi_device.cc\
iodev/busmouse.cc         iodev/gameport.cc    iodev/serial.cc\
   iodev/serial_raw.cc\
  iodev/harddrv.cc     iodev/slowdown_timer.cc\
iodev/cdrom.cc            iodev/hdimage.cc     iodev/soundlnx.cc\
iodev/cmos.cc             iodev/ioapic.cc      iodev/soundosx.cc\
   iodev/iodebug.cc     iodev/soundwin.cc\
iodev/devices.cc          iodev/keyboard.cc    iodev/speaker.cc\
iodev/dma.cc              iodev/ne2k.cc        iodev/svga_cirrus.cc\
iodev/eth_arpback.cc      iodev/parallel.cc    iodev/unmapped.cc\
iodev/eth.cc              iodev/pci2isa.cc     iodev/usb_common.cc\
iodev/eth_fbsd.cc         iodev/pci.cc         iodev/usb_hid.cc\
iodev/eth_linux.cc        iodev/pcidev.cc      iodev/usb_hub.cc\
iodev/eth_null.cc         iodev/pci_ide.cc     iodev/usb_msd.cc\
iodev/eth_packetmaker.cc  iodev/pcipnic.cc     iodev/usb_ohci.cc\
iodev/eth_tap.cc          iodev/pcivga.cc      iodev/usb_uhci.cc\
iodev/eth_tuntap.cc       iodev/pic.cc         iodev/vga.cc\
iodev/eth_vde.cc          iodev/pit82c54.cc    iodev/virt_timer.cc\
iodev/eth_vnet.cc         iodev/pit_wrap.cc    iodev/vmware3.cc\
iodev/eth_win32.cc        iodev/sb16.cc        iodev/vmware4.cc

x86_gui = gui/enh_dbg.cc gui/keymap.cc gui/textconfig.cc gui/gui.cc \
	gui/siminterface.cc $(am__append_1) $(am__append_2)
x86_disasm = disasm/dis_decode.cc  disasm/resolve.cc \
disasm/dis_groups.cc  disasm/syntax.cc

libx86_la_SOURCES = $(x86_cpu) $(x86_fpu) $(x86_common) $(x86_memory) $(x86_mach) $(x86_iodev) $(x86_gui) $(x86_disasm)
libx86_la_LDFLAGS = -lXpm -lstdc++ -module
pkglib_LTLIBRARIES = libx86.la
INCLUDES = -I$(srcdir)/common -I$(srcdir)/cpu -I$(srcdir)/include -I$(srcdir)/fpu -I$(srcdir)/ -I$(srcdir)/memory -I$(srcdir)/instrument/stubs -I$(srcdir)/iodev/  -I$(top_srcdir)/common/include -I$(srcdir)/common/
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu arch/x86/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu arch/x86/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libx86.la: $(libx86_la_OBJECTS) $(libx86_la_DEPENDENCIES) 
	$(libx86_la_LINK) -rpath $(pkglibdir) $(libx86_la_OBJECTS) $(libx86_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/3dnow.Plo
include ./$(DEPDIR)/access.Plo
include ./$(DEPDIR)/access32.Plo
include ./$(DEPDIR)/access64.Plo
include ./$(DEPDIR)/acpi.Plo
include ./$(DEPDIR)/aes.Plo
include ./$(DEPDIR)/apic.Plo
include ./$(DEPDIR)/arith16.Plo
include ./$(DEPDIR)/arith32.Plo
include ./$(DEPDIR)/arith64.Plo
include ./$(DEPDIR)/arith8.Plo
include ./$(DEPDIR)/bcd.Plo
include ./$(DEPDIR)/biosdev.Plo
include ./$(DEPDIR)/bit.Plo
include ./$(DEPDIR)/bit16.Plo
include ./$(DEPDIR)/bit32.Plo
include ./$(DEPDIR)/bit64.Plo
include ./$(DEPDIR)/busmouse.Plo
include ./$(DEPDIR)/call_far.Plo
include ./$(DEPDIR)/cdrom.Plo
include ./$(DEPDIR)/cmos.Plo
include ./$(DEPDIR)/config.Plo
include ./$(DEPDIR)/cpu.Plo
include ./$(DEPDIR)/cpuid.Plo
include ./$(DEPDIR)/crc32.Plo
include ./$(DEPDIR)/ctrl_xfer16.Plo
include ./$(DEPDIR)/ctrl_xfer32.Plo
include ./$(DEPDIR)/ctrl_xfer64.Plo
include ./$(DEPDIR)/ctrl_xfer_pro.Plo
include ./$(DEPDIR)/data_xfer16.Plo
include ./$(DEPDIR)/data_xfer32.Plo
include ./$(DEPDIR)/data_xfer8.Plo
include ./$(DEPDIR)/debugstuff.Plo
include ./$(DEPDIR)/devices.Plo
include ./$(DEPDIR)/dis_decode.Plo
include ./$(DEPDIR)/dis_groups.Plo
include ./$(DEPDIR)/dma.Plo
include ./$(DEPDIR)/enh_dbg.Plo
include ./$(DEPDIR)/eth.Plo
include ./$(DEPDIR)/eth_arpback.Plo
include ./$(DEPDIR)/eth_fbsd.Plo
include ./$(DEPDIR)/eth_linux.Plo
include ./$(DEPDIR)/eth_null.Plo
include ./$(DEPDIR)/eth_packetmaker.Plo
include ./$(DEPDIR)/eth_tap.Plo
include ./$(DEPDIR)/eth_tuntap.Plo
include ./$(DEPDIR)/eth_vde.Plo
include ./$(DEPDIR)/eth_vnet.Plo
include ./$(DEPDIR)/eth_win32.Plo
include ./$(DEPDIR)/exception.Plo
include ./$(DEPDIR)/extfpuirq.Plo
include ./$(DEPDIR)/f2xm1.Plo
include ./$(DEPDIR)/ferr.Plo
include ./$(DEPDIR)/fetchdecode.Plo
include ./$(DEPDIR)/fetchdecode64.Plo
include ./$(DEPDIR)/flag_ctrl.Plo
include ./$(DEPDIR)/flag_ctrl_pro.Plo
include ./$(DEPDIR)/floppy.Plo
include ./$(DEPDIR)/fpatan.Plo
include ./$(DEPDIR)/fprem.Plo
include ./$(DEPDIR)/fpu.Plo
include ./$(DEPDIR)/fpu_arith.Plo
include ./$(DEPDIR)/fpu_compare.Plo
include ./$(DEPDIR)/fpu_const.Plo
include ./$(DEPDIR)/fpu_emu.Plo
include ./$(DEPDIR)/fpu_load_store.Plo
include ./$(DEPDIR)/fpu_misc.Plo
include ./$(DEPDIR)/fpu_tags.Plo
include ./$(DEPDIR)/fpu_trans.Plo
include ./$(DEPDIR)/fsincos.Plo
include ./$(DEPDIR)/fyl2x.Plo
include ./$(DEPDIR)/gameport.Plo
include ./$(DEPDIR)/gui.Plo
include ./$(DEPDIR)/harddrv.Plo
include ./$(DEPDIR)/hdimage.Plo
include ./$(DEPDIR)/icache.Plo
include ./$(DEPDIR)/init.Plo
include ./$(DEPDIR)/io.Plo
include ./$(DEPDIR)/ioapic.Plo
include ./$(DEPDIR)/iodebug.Plo
include ./$(DEPDIR)/iret.Plo
include ./$(DEPDIR)/jmp_far.Plo
include ./$(DEPDIR)/keyboard.Plo
include ./$(DEPDIR)/keymap.Plo
include ./$(DEPDIR)/lazy_flags.Plo
include ./$(DEPDIR)/load32.Plo
include ./$(DEPDIR)/logical16.Plo
include ./$(DEPDIR)/logical32.Plo
include ./$(DEPDIR)/logical64.Plo
include ./$(DEPDIR)/logical8.Plo
include ./$(DEPDIR)/logio.Plo
include ./$(DEPDIR)/main.Plo
include ./$(DEPDIR)/memory.Plo
include ./$(DEPDIR)/misc_mem.Plo
include ./$(DEPDIR)/mmx.Plo
include ./$(DEPDIR)/msr.Plo
include ./$(DEPDIR)/mult16.Plo
include ./$(DEPDIR)/mult32.Plo
include ./$(DEPDIR)/mult64.Plo
include ./$(DEPDIR)/mult8.Plo
include ./$(DEPDIR)/ne2k.Plo
include ./$(DEPDIR)/osdep.Plo
include ./$(DEPDIR)/paging.Plo
include ./$(DEPDIR)/parallel.Plo
include ./$(DEPDIR)/pc_system.Plo
include ./$(DEPDIR)/pci.Plo
include ./$(DEPDIR)/pci2isa.Plo
include ./$(DEPDIR)/pci_ide.Plo
include ./$(DEPDIR)/pcidev.Plo
include ./$(DEPDIR)/pcipnic.Plo
include ./$(DEPDIR)/pcivga.Plo
include ./$(DEPDIR)/pic.Plo
include ./$(DEPDIR)/pit82c54.Plo
include ./$(DEPDIR)/pit_wrap.Plo
include ./$(DEPDIR)/plugin.Plo
include ./$(DEPDIR)/poly.Plo
include ./$(DEPDIR)/proc_ctrl.Plo
include ./$(DEPDIR)/protect_ctrl.Plo
include ./$(DEPDIR)/resolve.Plo
include ./$(DEPDIR)/resolver.Plo
include ./$(DEPDIR)/ret_far.Plo
include ./$(DEPDIR)/sb16.Plo
include ./$(DEPDIR)/scancodes.Plo
include ./$(DEPDIR)/scsi_device.Plo
include ./$(DEPDIR)/segment_ctrl.Plo
include ./$(DEPDIR)/segment_ctrl_pro.Plo
include ./$(DEPDIR)/serial.Plo
include ./$(DEPDIR)/serial_raw.Plo
include ./$(DEPDIR)/shift16.Plo
include ./$(DEPDIR)/shift32.Plo
include ./$(DEPDIR)/shift64.Plo
include ./$(DEPDIR)/shift8.Plo
include ./$(DEPDIR)/siminterface.Plo
include ./$(DEPDIR)/skyeye_mach_pc.Plo
include ./$(DEPDIR)/slowdown_timer.Plo
include ./$(DEPDIR)/smm.Plo
include ./$(DEPDIR)/soft_int.Plo
include ./$(DEPDIR)/softfloat-round-pack.Plo
include ./$(DEPDIR)/softfloat-specialize.Plo
include ./$(DEPDIR)/softfloat.Plo
include ./$(DEPDIR)/softfloatx80.Plo
include ./$(DEPDIR)/soundlnx.Plo
include ./$(DEPDIR)/soundosx.Plo
include ./$(DEPDIR)/soundwin.Plo
include ./$(DEPDIR)/speaker.Plo
include ./$(DEPDIR)/sse.Plo
include ./$(DEPDIR)/sse_move.Plo
include ./$(DEPDIR)/sse_pfp.Plo
include ./$(DEPDIR)/sse_rcp.Plo
include ./$(DEPDIR)/sse_string.Plo
include ./$(DEPDIR)/stack16.Plo
include ./$(DEPDIR)/stack32.Plo
include ./$(DEPDIR)/stack64.Plo
include ./$(DEPDIR)/string.Plo
include ./$(DEPDIR)/svga_cirrus.Plo
include ./$(DEPDIR)/syntax.Plo
include ./$(DEPDIR)/tasking.Plo
include ./$(DEPDIR)/textconfig.Plo
include ./$(DEPDIR)/unmapped.Plo
include ./$(DEPDIR)/usb_common.Plo
include ./$(DEPDIR)/usb_hid.Plo
include ./$(DEPDIR)/usb_hub.Plo
include ./$(DEPDIR)/usb_msd.Plo
include ./$(DEPDIR)/usb_ohci.Plo
include ./$(DEPDIR)/usb_uhci.Plo
include ./$(DEPDIR)/vga.Plo
include ./$(DEPDIR)/virt_timer.Plo
include ./$(DEPDIR)/vm8086.Plo
include ./$(DEPDIR)/vmexit.Plo
include ./$(DEPDIR)/vmware3.Plo
include ./$(DEPDIR)/vmware4.Plo
include ./$(DEPDIR)/vmx.Plo
include ./$(DEPDIR)/win32.Plo
include ./$(DEPDIR)/win32dialog.Plo
include ./$(DEPDIR)/x.Plo
include ./$(DEPDIR)/x86_arch_interface.Plo
include ./$(DEPDIR)/x86_module.Plo
include ./$(DEPDIR)/xsave.Plo

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

3dnow.lo: cpu/3dnow.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3dnow.lo -MD -MP -MF $(DEPDIR)/3dnow.Tpo -c -o 3dnow.lo `test -f 'cpu/3dnow.cc' || echo '$(srcdir)/'`cpu/3dnow.cc
	$(am__mv) $(DEPDIR)/3dnow.Tpo $(DEPDIR)/3dnow.Plo
#	source='cpu/3dnow.cc' object='3dnow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3dnow.lo `test -f 'cpu/3dnow.cc' || echo '$(srcdir)/'`cpu/3dnow.cc

data_xfer8.lo: cpu/data_xfer8.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_xfer8.lo -MD -MP -MF $(DEPDIR)/data_xfer8.Tpo -c -o data_xfer8.lo `test -f 'cpu/data_xfer8.cc' || echo '$(srcdir)/'`cpu/data_xfer8.cc
	$(am__mv) $(DEPDIR)/data_xfer8.Tpo $(DEPDIR)/data_xfer8.Plo
#	source='cpu/data_xfer8.cc' object='data_xfer8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_xfer8.lo `test -f 'cpu/data_xfer8.cc' || echo '$(srcdir)/'`cpu/data_xfer8.cc

proc_ctrl.lo: cpu/proc_ctrl.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT proc_ctrl.lo -MD -MP -MF $(DEPDIR)/proc_ctrl.Tpo -c -o proc_ctrl.lo `test -f 'cpu/proc_ctrl.cc' || echo '$(srcdir)/'`cpu/proc_ctrl.cc
	$(am__mv) $(DEPDIR)/proc_ctrl.Tpo $(DEPDIR)/proc_ctrl.Plo
#	source='cpu/proc_ctrl.cc' object='proc_ctrl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o proc_ctrl.lo `test -f 'cpu/proc_ctrl.cc' || echo '$(srcdir)/'`cpu/proc_ctrl.cc

access32.lo: cpu/access32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT access32.lo -MD -MP -MF $(DEPDIR)/access32.Tpo -c -o access32.lo `test -f 'cpu/access32.cc' || echo '$(srcdir)/'`cpu/access32.cc
	$(am__mv) $(DEPDIR)/access32.Tpo $(DEPDIR)/access32.Plo
#	source='cpu/access32.cc' object='access32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o access32.lo `test -f 'cpu/access32.cc' || echo '$(srcdir)/'`cpu/access32.cc

debugstuff.lo: cpu/debugstuff.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debugstuff.lo -MD -MP -MF $(DEPDIR)/debugstuff.Tpo -c -o debugstuff.lo `test -f 'cpu/debugstuff.cc' || echo '$(srcdir)/'`cpu/debugstuff.cc
	$(am__mv) $(DEPDIR)/debugstuff.Tpo $(DEPDIR)/debugstuff.Plo
#	source='cpu/debugstuff.cc' object='debugstuff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debugstuff.lo `test -f 'cpu/debugstuff.cc' || echo '$(srcdir)/'`cpu/debugstuff.cc

protect_ctrl.lo: cpu/protect_ctrl.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT protect_ctrl.lo -MD -MP -MF $(DEPDIR)/protect_ctrl.Tpo -c -o protect_ctrl.lo `test -f 'cpu/protect_ctrl.cc' || echo '$(srcdir)/'`cpu/protect_ctrl.cc
	$(am__mv) $(DEPDIR)/protect_ctrl.Tpo $(DEPDIR)/protect_ctrl.Plo
#	source='cpu/protect_ctrl.cc' object='protect_ctrl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o protect_ctrl.lo `test -f 'cpu/protect_ctrl.cc' || echo '$(srcdir)/'`cpu/protect_ctrl.cc

access64.lo: cpu/access64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT access64.lo -MD -MP -MF $(DEPDIR)/access64.Tpo -c -o access64.lo `test -f 'cpu/access64.cc' || echo '$(srcdir)/'`cpu/access64.cc
	$(am__mv) $(DEPDIR)/access64.Tpo $(DEPDIR)/access64.Plo
#	source='cpu/access64.cc' object='access64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o access64.lo `test -f 'cpu/access64.cc' || echo '$(srcdir)/'`cpu/access64.cc

exception.lo: cpu/exception.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT exception.lo -MD -MP -MF $(DEPDIR)/exception.Tpo -c -o exception.lo `test -f 'cpu/exception.cc' || echo '$(srcdir)/'`cpu/exception.cc
	$(am__mv) $(DEPDIR)/exception.Tpo $(DEPDIR)/exception.Plo
#	source='cpu/exception.cc' object='exception.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o exception.lo `test -f 'cpu/exception.cc' || echo '$(srcdir)/'`cpu/exception.cc

resolver.lo: cpu/resolver.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resolver.lo -MD -MP -MF $(DEPDIR)/resolver.Tpo -c -o resolver.lo `test -f 'cpu/resolver.cc' || echo '$(srcdir)/'`cpu/resolver.cc
	$(am__mv) $(DEPDIR)/resolver.Tpo $(DEPDIR)/resolver.Plo
#	source='cpu/resolver.cc' object='resolver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resolver.lo `test -f 'cpu/resolver.cc' || echo '$(srcdir)/'`cpu/resolver.cc

access.lo: cpu/access.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT access.lo -MD -MP -MF $(DEPDIR)/access.Tpo -c -o access.lo `test -f 'cpu/access.cc' || echo '$(srcdir)/'`cpu/access.cc
	$(am__mv) $(DEPDIR)/access.Tpo $(DEPDIR)/access.Plo
#	source='cpu/access.cc' object='access.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o access.lo `test -f 'cpu/access.cc' || echo '$(srcdir)/'`cpu/access.cc

fetchdecode64.lo: cpu/fetchdecode64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fetchdecode64.lo -MD -MP -MF $(DEPDIR)/fetchdecode64.Tpo -c -o fetchdecode64.lo `test -f 'cpu/fetchdecode64.cc' || echo '$(srcdir)/'`cpu/fetchdecode64.cc
	$(am__mv) $(DEPDIR)/fetchdecode64.Tpo $(DEPDIR)/fetchdecode64.Plo
#	source='cpu/fetchdecode64.cc' object='fetchdecode64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fetchdecode64.lo `test -f 'cpu/fetchdecode64.cc' || echo '$(srcdir)/'`cpu/fetchdecode64.cc

ret_far.lo: cpu/ret_far.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ret_far.lo -MD -MP -MF $(DEPDIR)/ret_far.Tpo -c -o ret_far.lo `test -f 'cpu/ret_far.cc' || echo '$(srcdir)/'`cpu/ret_far.cc
	$(am__mv) $(DEPDIR)/ret_far.Tpo $(DEPDIR)/ret_far.Plo
#	source='cpu/ret_far.cc' object='ret_far.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ret_far.lo `test -f 'cpu/ret_far.cc' || echo '$(srcdir)/'`cpu/ret_far.cc

aes.lo: cpu/aes.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aes.lo -MD -MP -MF $(DEPDIR)/aes.Tpo -c -o aes.lo `test -f 'cpu/aes.cc' || echo '$(srcdir)/'`cpu/aes.cc
	$(am__mv) $(DEPDIR)/aes.Tpo $(DEPDIR)/aes.Plo
#	source='cpu/aes.cc' object='aes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aes.lo `test -f 'cpu/aes.cc' || echo '$(srcdir)/'`cpu/aes.cc

fetchdecode.lo: cpu/fetchdecode.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fetchdecode.lo -MD -MP -MF $(DEPDIR)/fetchdecode.Tpo -c -o fetchdecode.lo `test -f 'cpu/fetchdecode.cc' || echo '$(srcdir)/'`cpu/fetchdecode.cc
	$(am__mv) $(DEPDIR)/fetchdecode.Tpo $(DEPDIR)/fetchdecode.Plo
#	source='cpu/fetchdecode.cc' object='fetchdecode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fetchdecode.lo `test -f 'cpu/fetchdecode.cc' || echo '$(srcdir)/'`cpu/fetchdecode.cc

segment_ctrl.lo: cpu/segment_ctrl.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT segment_ctrl.lo -MD -MP -MF $(DEPDIR)/segment_ctrl.Tpo -c -o segment_ctrl.lo `test -f 'cpu/segment_ctrl.cc' || echo '$(srcdir)/'`cpu/segment_ctrl.cc
	$(am__mv) $(DEPDIR)/segment_ctrl.Tpo $(DEPDIR)/segment_ctrl.Plo
#	source='cpu/segment_ctrl.cc' object='segment_ctrl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o segment_ctrl.lo `test -f 'cpu/segment_ctrl.cc' || echo '$(srcdir)/'`cpu/segment_ctrl.cc

apic.lo: cpu/apic.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT apic.lo -MD -MP -MF $(DEPDIR)/apic.Tpo -c -o apic.lo `test -f 'cpu/apic.cc' || echo '$(srcdir)/'`cpu/apic.cc
	$(am__mv) $(DEPDIR)/apic.Tpo $(DEPDIR)/apic.Plo
#	source='cpu/apic.cc' object='apic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o apic.lo `test -f 'cpu/apic.cc' || echo '$(srcdir)/'`cpu/apic.cc

flag_ctrl.lo: cpu/flag_ctrl.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flag_ctrl.lo -MD -MP -MF $(DEPDIR)/flag_ctrl.Tpo -c -o flag_ctrl.lo `test -f 'cpu/flag_ctrl.cc' || echo '$(srcdir)/'`cpu/flag_ctrl.cc
	$(am__mv) $(DEPDIR)/flag_ctrl.Tpo $(DEPDIR)/flag_ctrl.Plo
#	source='cpu/flag_ctrl.cc' object='flag_ctrl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flag_ctrl.lo `test -f 'cpu/flag_ctrl.cc' || echo '$(srcdir)/'`cpu/flag_ctrl.cc

segment_ctrl_pro.lo: cpu/segment_ctrl_pro.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT segment_ctrl_pro.lo -MD -MP -MF $(DEPDIR)/segment_ctrl_pro.Tpo -c -o segment_ctrl_pro.lo `test -f 'cpu/segment_ctrl_pro.cc' || echo '$(srcdir)/'`cpu/segment_ctrl_pro.cc
	$(am__mv) $(DEPDIR)/segment_ctrl_pro.Tpo $(DEPDIR)/segment_ctrl_pro.Plo
#	source='cpu/segment_ctrl_pro.cc' object='segment_ctrl_pro.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o segment_ctrl_pro.lo `test -f 'cpu/segment_ctrl_pro.cc' || echo '$(srcdir)/'`cpu/segment_ctrl_pro.cc

arith16.lo: cpu/arith16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arith16.lo -MD -MP -MF $(DEPDIR)/arith16.Tpo -c -o arith16.lo `test -f 'cpu/arith16.cc' || echo '$(srcdir)/'`cpu/arith16.cc
	$(am__mv) $(DEPDIR)/arith16.Tpo $(DEPDIR)/arith16.Plo
#	source='cpu/arith16.cc' object='arith16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arith16.lo `test -f 'cpu/arith16.cc' || echo '$(srcdir)/'`cpu/arith16.cc

flag_ctrl_pro.lo: cpu/flag_ctrl_pro.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT flag_ctrl_pro.lo -MD -MP -MF $(DEPDIR)/flag_ctrl_pro.Tpo -c -o flag_ctrl_pro.lo `test -f 'cpu/flag_ctrl_pro.cc' || echo '$(srcdir)/'`cpu/flag_ctrl_pro.cc
	$(am__mv) $(DEPDIR)/flag_ctrl_pro.Tpo $(DEPDIR)/flag_ctrl_pro.Plo
#	source='cpu/flag_ctrl_pro.cc' object='flag_ctrl_pro.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o flag_ctrl_pro.lo `test -f 'cpu/flag_ctrl_pro.cc' || echo '$(srcdir)/'`cpu/flag_ctrl_pro.cc

shift16.lo: cpu/shift16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shift16.lo -MD -MP -MF $(DEPDIR)/shift16.Tpo -c -o shift16.lo `test -f 'cpu/shift16.cc' || echo '$(srcdir)/'`cpu/shift16.cc
	$(am__mv) $(DEPDIR)/shift16.Tpo $(DEPDIR)/shift16.Plo
#	source='cpu/shift16.cc' object='shift16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shift16.lo `test -f 'cpu/shift16.cc' || echo '$(srcdir)/'`cpu/shift16.cc

arith32.lo: cpu/arith32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arith32.lo -MD -MP -MF $(DEPDIR)/arith32.Tpo -c -o arith32.lo `test -f 'cpu/arith32.cc' || echo '$(srcdir)/'`cpu/arith32.cc
	$(am__mv) $(DEPDIR)/arith32.Tpo $(DEPDIR)/arith32.Plo
#	source='cpu/arith32.cc' object='arith32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arith32.lo `test -f 'cpu/arith32.cc' || echo '$(srcdir)/'`cpu/arith32.cc

fpu_emu.lo: cpu/fpu_emu.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_emu.lo -MD -MP -MF $(DEPDIR)/fpu_emu.Tpo -c -o fpu_emu.lo `test -f 'cpu/fpu_emu.cc' || echo '$(srcdir)/'`cpu/fpu_emu.cc
	$(am__mv) $(DEPDIR)/fpu_emu.Tpo $(DEPDIR)/fpu_emu.Plo
#	source='cpu/fpu_emu.cc' object='fpu_emu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_emu.lo `test -f 'cpu/fpu_emu.cc' || echo '$(srcdir)/'`cpu/fpu_emu.cc

shift32.lo: cpu/shift32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shift32.lo -MD -MP -MF $(DEPDIR)/shift32.Tpo -c -o shift32.lo `test -f 'cpu/shift32.cc' || echo '$(srcdir)/'`cpu/shift32.cc
	$(am__mv) $(DEPDIR)/shift32.Tpo $(DEPDIR)/shift32.Plo
#	source='cpu/shift32.cc' object='shift32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shift32.lo `test -f 'cpu/shift32.cc' || echo '$(srcdir)/'`cpu/shift32.cc

arith64.lo: cpu/arith64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arith64.lo -MD -MP -MF $(DEPDIR)/arith64.Tpo -c -o arith64.lo `test -f 'cpu/arith64.cc' || echo '$(srcdir)/'`cpu/arith64.cc
	$(am__mv) $(DEPDIR)/arith64.Tpo $(DEPDIR)/arith64.Plo
#	source='cpu/arith64.cc' object='arith64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arith64.lo `test -f 'cpu/arith64.cc' || echo '$(srcdir)/'`cpu/arith64.cc

icache.lo: cpu/icache.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT icache.lo -MD -MP -MF $(DEPDIR)/icache.Tpo -c -o icache.lo `test -f 'cpu/icache.cc' || echo '$(srcdir)/'`cpu/icache.cc
	$(am__mv) $(DEPDIR)/icache.Tpo $(DEPDIR)/icache.Plo
#	source='cpu/icache.cc' object='icache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o icache.lo `test -f 'cpu/icache.cc' || echo '$(srcdir)/'`cpu/icache.cc

shift64.lo: cpu/shift64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shift64.lo -MD -MP -MF $(DEPDIR)/shift64.Tpo -c -o shift64.lo `test -f 'cpu/shift64.cc' || echo '$(srcdir)/'`cpu/shift64.cc
	$(am__mv) $(DEPDIR)/shift64.Tpo $(DEPDIR)/shift64.Plo
#	source='cpu/shift64.cc' object='shift64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shift64.lo `test -f 'cpu/shift64.cc' || echo '$(srcdir)/'`cpu/shift64.cc

arith8.lo: cpu/arith8.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT arith8.lo -MD -MP -MF $(DEPDIR)/arith8.Tpo -c -o arith8.lo `test -f 'cpu/arith8.cc' || echo '$(srcdir)/'`cpu/arith8.cc
	$(am__mv) $(DEPDIR)/arith8.Tpo $(DEPDIR)/arith8.Plo
#	source='cpu/arith8.cc' object='arith8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o arith8.lo `test -f 'cpu/arith8.cc' || echo '$(srcdir)/'`cpu/arith8.cc

init.lo: cpu/init.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT init.lo -MD -MP -MF $(DEPDIR)/init.Tpo -c -o init.lo `test -f 'cpu/init.cc' || echo '$(srcdir)/'`cpu/init.cc
	$(am__mv) $(DEPDIR)/init.Tpo $(DEPDIR)/init.Plo
#	source='cpu/init.cc' object='init.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o init.lo `test -f 'cpu/init.cc' || echo '$(srcdir)/'`cpu/init.cc

shift8.lo: cpu/shift8.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shift8.lo -MD -MP -MF $(DEPDIR)/shift8.Tpo -c -o shift8.lo `test -f 'cpu/shift8.cc' || echo '$(srcdir)/'`cpu/shift8.cc
	$(am__mv) $(DEPDIR)/shift8.Tpo $(DEPDIR)/shift8.Plo
#	source='cpu/shift8.cc' object='shift8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shift8.lo `test -f 'cpu/shift8.cc' || echo '$(srcdir)/'`cpu/shift8.cc

bcd.lo: cpu/bcd.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bcd.lo -MD -MP -MF $(DEPDIR)/bcd.Tpo -c -o bcd.lo `test -f 'cpu/bcd.cc' || echo '$(srcdir)/'`cpu/bcd.cc
	$(am__mv) $(DEPDIR)/bcd.Tpo $(DEPDIR)/bcd.Plo
#	source='cpu/bcd.cc' object='bcd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bcd.lo `test -f 'cpu/bcd.cc' || echo '$(srcdir)/'`cpu/bcd.cc

io.lo: cpu/io.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT io.lo -MD -MP -MF $(DEPDIR)/io.Tpo -c -o io.lo `test -f 'cpu/io.cc' || echo '$(srcdir)/'`cpu/io.cc
	$(am__mv) $(DEPDIR)/io.Tpo $(DEPDIR)/io.Plo
#	source='cpu/io.cc' object='io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o io.lo `test -f 'cpu/io.cc' || echo '$(srcdir)/'`cpu/io.cc

smm.lo: cpu/smm.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT smm.lo -MD -MP -MF $(DEPDIR)/smm.Tpo -c -o smm.lo `test -f 'cpu/smm.cc' || echo '$(srcdir)/'`cpu/smm.cc
	$(am__mv) $(DEPDIR)/smm.Tpo $(DEPDIR)/smm.Plo
#	source='cpu/smm.cc' object='smm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o smm.lo `test -f 'cpu/smm.cc' || echo '$(srcdir)/'`cpu/smm.cc

bit16.lo: cpu/bit16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bit16.lo -MD -MP -MF $(DEPDIR)/bit16.Tpo -c -o bit16.lo `test -f 'cpu/bit16.cc' || echo '$(srcdir)/'`cpu/bit16.cc
	$(am__mv) $(DEPDIR)/bit16.Tpo $(DEPDIR)/bit16.Plo
#	source='cpu/bit16.cc' object='bit16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bit16.lo `test -f 'cpu/bit16.cc' || echo '$(srcdir)/'`cpu/bit16.cc

iret.lo: cpu/iret.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT iret.lo -MD -MP -MF $(DEPDIR)/iret.Tpo -c -o iret.lo `test -f 'cpu/iret.cc' || echo '$(srcdir)/'`cpu/iret.cc
	$(am__mv) $(DEPDIR)/iret.Tpo $(DEPDIR)/iret.Plo
#	source='cpu/iret.cc' object='iret.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o iret.lo `test -f 'cpu/iret.cc' || echo '$(srcdir)/'`cpu/iret.cc

soft_int.lo: cpu/soft_int.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT soft_int.lo -MD -MP -MF $(DEPDIR)/soft_int.Tpo -c -o soft_int.lo `test -f 'cpu/soft_int.cc' || echo '$(srcdir)/'`cpu/soft_int.cc
	$(am__mv) $(DEPDIR)/soft_int.Tpo $(DEPDIR)/soft_int.Plo
#	source='cpu/soft_int.cc' object='soft_int.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o soft_int.lo `test -f 'cpu/soft_int.cc' || echo '$(srcdir)/'`cpu/soft_int.cc

bit32.lo: cpu/bit32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bit32.lo -MD -MP -MF $(DEPDIR)/bit32.Tpo -c -o bit32.lo `test -f 'cpu/bit32.cc' || echo '$(srcdir)/'`cpu/bit32.cc
	$(am__mv) $(DEPDIR)/bit32.Tpo $(DEPDIR)/bit32.Plo
#	source='cpu/bit32.cc' object='bit32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bit32.lo `test -f 'cpu/bit32.cc' || echo '$(srcdir)/'`cpu/bit32.cc

jmp_far.lo: cpu/jmp_far.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jmp_far.lo -MD -MP -MF $(DEPDIR)/jmp_far.Tpo -c -o jmp_far.lo `test -f 'cpu/jmp_far.cc' || echo '$(srcdir)/'`cpu/jmp_far.cc
	$(am__mv) $(DEPDIR)/jmp_far.Tpo $(DEPDIR)/jmp_far.Plo
#	source='cpu/jmp_far.cc' object='jmp_far.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jmp_far.lo `test -f 'cpu/jmp_far.cc' || echo '$(srcdir)/'`cpu/jmp_far.cc

sse.lo: cpu/sse.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sse.lo -MD -MP -MF $(DEPDIR)/sse.Tpo -c -o sse.lo `test -f 'cpu/sse.cc' || echo '$(srcdir)/'`cpu/sse.cc
	$(am__mv) $(DEPDIR)/sse.Tpo $(DEPDIR)/sse.Plo
#	source='cpu/sse.cc' object='sse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sse.lo `test -f 'cpu/sse.cc' || echo '$(srcdir)/'`cpu/sse.cc

bit64.lo: cpu/bit64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bit64.lo -MD -MP -MF $(DEPDIR)/bit64.Tpo -c -o bit64.lo `test -f 'cpu/bit64.cc' || echo '$(srcdir)/'`cpu/bit64.cc
	$(am__mv) $(DEPDIR)/bit64.Tpo $(DEPDIR)/bit64.Plo
#	source='cpu/bit64.cc' object='bit64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bit64.lo `test -f 'cpu/bit64.cc' || echo '$(srcdir)/'`cpu/bit64.cc

lazy_flags.lo: cpu/lazy_flags.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lazy_flags.lo -MD -MP -MF $(DEPDIR)/lazy_flags.Tpo -c -o lazy_flags.lo `test -f 'cpu/lazy_flags.cc' || echo '$(srcdir)/'`cpu/lazy_flags.cc
	$(am__mv) $(DEPDIR)/lazy_flags.Tpo $(DEPDIR)/lazy_flags.Plo
#	source='cpu/lazy_flags.cc' object='lazy_flags.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lazy_flags.lo `test -f 'cpu/lazy_flags.cc' || echo '$(srcdir)/'`cpu/lazy_flags.cc

sse_move.lo: cpu/sse_move.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sse_move.lo -MD -MP -MF $(DEPDIR)/sse_move.Tpo -c -o sse_move.lo `test -f 'cpu/sse_move.cc' || echo '$(srcdir)/'`cpu/sse_move.cc
	$(am__mv) $(DEPDIR)/sse_move.Tpo $(DEPDIR)/sse_move.Plo
#	source='cpu/sse_move.cc' object='sse_move.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sse_move.lo `test -f 'cpu/sse_move.cc' || echo '$(srcdir)/'`cpu/sse_move.cc

bit.lo: cpu/bit.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bit.lo -MD -MP -MF $(DEPDIR)/bit.Tpo -c -o bit.lo `test -f 'cpu/bit.cc' || echo '$(srcdir)/'`cpu/bit.cc
	$(am__mv) $(DEPDIR)/bit.Tpo $(DEPDIR)/bit.Plo
#	source='cpu/bit.cc' object='bit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bit.lo `test -f 'cpu/bit.cc' || echo '$(srcdir)/'`cpu/bit.cc

load32.lo: cpu/load32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT load32.lo -MD -MP -MF $(DEPDIR)/load32.Tpo -c -o load32.lo `test -f 'cpu/load32.cc' || echo '$(srcdir)/'`cpu/load32.cc
	$(am__mv) $(DEPDIR)/load32.Tpo $(DEPDIR)/load32.Plo
#	source='cpu/load32.cc' object='load32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o load32.lo `test -f 'cpu/load32.cc' || echo '$(srcdir)/'`cpu/load32.cc

sse_pfp.lo: cpu/sse_pfp.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sse_pfp.lo -MD -MP -MF $(DEPDIR)/sse_pfp.Tpo -c -o sse_pfp.lo `test -f 'cpu/sse_pfp.cc' || echo '$(srcdir)/'`cpu/sse_pfp.cc
	$(am__mv) $(DEPDIR)/sse_pfp.Tpo $(DEPDIR)/sse_pfp.Plo
#	source='cpu/sse_pfp.cc' object='sse_pfp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sse_pfp.lo `test -f 'cpu/sse_pfp.cc' || echo '$(srcdir)/'`cpu/sse_pfp.cc

call_far.lo: cpu/call_far.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT call_far.lo -MD -MP -MF $(DEPDIR)/call_far.Tpo -c -o call_far.lo `test -f 'cpu/call_far.cc' || echo '$(srcdir)/'`cpu/call_far.cc
	$(am__mv) $(DEPDIR)/call_far.Tpo $(DEPDIR)/call_far.Plo
#	source='cpu/call_far.cc' object='call_far.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o call_far.lo `test -f 'cpu/call_far.cc' || echo '$(srcdir)/'`cpu/call_far.cc

logical16.lo: cpu/logical16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logical16.lo -MD -MP -MF $(DEPDIR)/logical16.Tpo -c -o logical16.lo `test -f 'cpu/logical16.cc' || echo '$(srcdir)/'`cpu/logical16.cc
	$(am__mv) $(DEPDIR)/logical16.Tpo $(DEPDIR)/logical16.Plo
#	source='cpu/logical16.cc' object='logical16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logical16.lo `test -f 'cpu/logical16.cc' || echo '$(srcdir)/'`cpu/logical16.cc

sse_rcp.lo: cpu/sse_rcp.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sse_rcp.lo -MD -MP -MF $(DEPDIR)/sse_rcp.Tpo -c -o sse_rcp.lo `test -f 'cpu/sse_rcp.cc' || echo '$(srcdir)/'`cpu/sse_rcp.cc
	$(am__mv) $(DEPDIR)/sse_rcp.Tpo $(DEPDIR)/sse_rcp.Plo
#	source='cpu/sse_rcp.cc' object='sse_rcp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sse_rcp.lo `test -f 'cpu/sse_rcp.cc' || echo '$(srcdir)/'`cpu/sse_rcp.cc

cpu.lo: cpu/cpu.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpu.lo -MD -MP -MF $(DEPDIR)/cpu.Tpo -c -o cpu.lo `test -f 'cpu/cpu.cc' || echo '$(srcdir)/'`cpu/cpu.cc
	$(am__mv) $(DEPDIR)/cpu.Tpo $(DEPDIR)/cpu.Plo
#	source='cpu/cpu.cc' object='cpu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpu.lo `test -f 'cpu/cpu.cc' || echo '$(srcdir)/'`cpu/cpu.cc

logical32.lo: cpu/logical32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logical32.lo -MD -MP -MF $(DEPDIR)/logical32.Tpo -c -o logical32.lo `test -f 'cpu/logical32.cc' || echo '$(srcdir)/'`cpu/logical32.cc
	$(am__mv) $(DEPDIR)/logical32.Tpo $(DEPDIR)/logical32.Plo
#	source='cpu/logical32.cc' object='logical32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logical32.lo `test -f 'cpu/logical32.cc' || echo '$(srcdir)/'`cpu/logical32.cc

sse_string.lo: cpu/sse_string.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sse_string.lo -MD -MP -MF $(DEPDIR)/sse_string.Tpo -c -o sse_string.lo `test -f 'cpu/sse_string.cc' || echo '$(srcdir)/'`cpu/sse_string.cc
	$(am__mv) $(DEPDIR)/sse_string.Tpo $(DEPDIR)/sse_string.Plo
#	source='cpu/sse_string.cc' object='sse_string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sse_string.lo `test -f 'cpu/sse_string.cc' || echo '$(srcdir)/'`cpu/sse_string.cc

cpuid.lo: cpu/cpuid.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpuid.lo -MD -MP -MF $(DEPDIR)/cpuid.Tpo -c -o cpuid.lo `test -f 'cpu/cpuid.cc' || echo '$(srcdir)/'`cpu/cpuid.cc
	$(am__mv) $(DEPDIR)/cpuid.Tpo $(DEPDIR)/cpuid.Plo
#	source='cpu/cpuid.cc' object='cpuid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpuid.lo `test -f 'cpu/cpuid.cc' || echo '$(srcdir)/'`cpu/cpuid.cc

logical64.lo: cpu/logical64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logical64.lo -MD -MP -MF $(DEPDIR)/logical64.Tpo -c -o logical64.lo `test -f 'cpu/logical64.cc' || echo '$(srcdir)/'`cpu/logical64.cc
	$(am__mv) $(DEPDIR)/logical64.Tpo $(DEPDIR)/logical64.Plo
#	source='cpu/logical64.cc' object='logical64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logical64.lo `test -f 'cpu/logical64.cc' || echo '$(srcdir)/'`cpu/logical64.cc

stack16.lo: cpu/stack16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stack16.lo -MD -MP -MF $(DEPDIR)/stack16.Tpo -c -o stack16.lo `test -f 'cpu/stack16.cc' || echo '$(srcdir)/'`cpu/stack16.cc
	$(am__mv) $(DEPDIR)/stack16.Tpo $(DEPDIR)/stack16.Plo
#	source='cpu/stack16.cc' object='stack16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stack16.lo `test -f 'cpu/stack16.cc' || echo '$(srcdir)/'`cpu/stack16.cc

crc32.lo: cpu/crc32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crc32.lo -MD -MP -MF $(DEPDIR)/crc32.Tpo -c -o crc32.lo `test -f 'cpu/crc32.cc' || echo '$(srcdir)/'`cpu/crc32.cc
	$(am__mv) $(DEPDIR)/crc32.Tpo $(DEPDIR)/crc32.Plo
#	source='cpu/crc32.cc' object='crc32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crc32.lo `test -f 'cpu/crc32.cc' || echo '$(srcdir)/'`cpu/crc32.cc

logical8.lo: cpu/logical8.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logical8.lo -MD -MP -MF $(DEPDIR)/logical8.Tpo -c -o logical8.lo `test -f 'cpu/logical8.cc' || echo '$(srcdir)/'`cpu/logical8.cc
	$(am__mv) $(DEPDIR)/logical8.Tpo $(DEPDIR)/logical8.Plo
#	source='cpu/logical8.cc' object='logical8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logical8.lo `test -f 'cpu/logical8.cc' || echo '$(srcdir)/'`cpu/logical8.cc

stack32.lo: cpu/stack32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stack32.lo -MD -MP -MF $(DEPDIR)/stack32.Tpo -c -o stack32.lo `test -f 'cpu/stack32.cc' || echo '$(srcdir)/'`cpu/stack32.cc
	$(am__mv) $(DEPDIR)/stack32.Tpo $(DEPDIR)/stack32.Plo
#	source='cpu/stack32.cc' object='stack32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stack32.lo `test -f 'cpu/stack32.cc' || echo '$(srcdir)/'`cpu/stack32.cc

ctrl_xfer16.lo: cpu/ctrl_xfer16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrl_xfer16.lo -MD -MP -MF $(DEPDIR)/ctrl_xfer16.Tpo -c -o ctrl_xfer16.lo `test -f 'cpu/ctrl_xfer16.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer16.cc
	$(am__mv) $(DEPDIR)/ctrl_xfer16.Tpo $(DEPDIR)/ctrl_xfer16.Plo
#	source='cpu/ctrl_xfer16.cc' object='ctrl_xfer16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrl_xfer16.lo `test -f 'cpu/ctrl_xfer16.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer16.cc

mmx.lo: cpu/mmx.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmx.lo -MD -MP -MF $(DEPDIR)/mmx.Tpo -c -o mmx.lo `test -f 'cpu/mmx.cc' || echo '$(srcdir)/'`cpu/mmx.cc
	$(am__mv) $(DEPDIR)/mmx.Tpo $(DEPDIR)/mmx.Plo
#	source='cpu/mmx.cc' object='mmx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmx.lo `test -f 'cpu/mmx.cc' || echo '$(srcdir)/'`cpu/mmx.cc

stack64.lo: cpu/stack64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stack64.lo -MD -MP -MF $(DEPDIR)/stack64.Tpo -c -o stack64.lo `test -f 'cpu/stack64.cc' || echo '$(srcdir)/'`cpu/stack64.cc
	$(am__mv) $(DEPDIR)/stack64.Tpo $(DEPDIR)/stack64.Plo
#	source='cpu/stack64.cc' object='stack64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stack64.lo `test -f 'cpu/stack64.cc' || echo '$(srcdir)/'`cpu/stack64.cc

ctrl_xfer32.lo: cpu/ctrl_xfer32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrl_xfer32.lo -MD -MP -MF $(DEPDIR)/ctrl_xfer32.Tpo -c -o ctrl_xfer32.lo `test -f 'cpu/ctrl_xfer32.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer32.cc
	$(am__mv) $(DEPDIR)/ctrl_xfer32.Tpo $(DEPDIR)/ctrl_xfer32.Plo
#	source='cpu/ctrl_xfer32.cc' object='ctrl_xfer32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrl_xfer32.lo `test -f 'cpu/ctrl_xfer32.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer32.cc

msr.lo: cpu/msr.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT msr.lo -MD -MP -MF $(DEPDIR)/msr.Tpo -c -o msr.lo `test -f 'cpu/msr.cc' || echo '$(srcdir)/'`cpu/msr.cc
	$(am__mv) $(DEPDIR)/msr.Tpo $(DEPDIR)/msr.Plo
#	source='cpu/msr.cc' object='msr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o msr.lo `test -f 'cpu/msr.cc' || echo '$(srcdir)/'`cpu/msr.cc

string.lo: cpu/string.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT string.lo -MD -MP -MF $(DEPDIR)/string.Tpo -c -o string.lo `test -f 'cpu/string.cc' || echo '$(srcdir)/'`cpu/string.cc
	$(am__mv) $(DEPDIR)/string.Tpo $(DEPDIR)/string.Plo
#	source='cpu/string.cc' object='string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o string.lo `test -f 'cpu/string.cc' || echo '$(srcdir)/'`cpu/string.cc

ctrl_xfer64.lo: cpu/ctrl_xfer64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrl_xfer64.lo -MD -MP -MF $(DEPDIR)/ctrl_xfer64.Tpo -c -o ctrl_xfer64.lo `test -f 'cpu/ctrl_xfer64.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer64.cc
	$(am__mv) $(DEPDIR)/ctrl_xfer64.Tpo $(DEPDIR)/ctrl_xfer64.Plo
#	source='cpu/ctrl_xfer64.cc' object='ctrl_xfer64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrl_xfer64.lo `test -f 'cpu/ctrl_xfer64.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer64.cc

mult16.lo: cpu/mult16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mult16.lo -MD -MP -MF $(DEPDIR)/mult16.Tpo -c -o mult16.lo `test -f 'cpu/mult16.cc' || echo '$(srcdir)/'`cpu/mult16.cc
	$(am__mv) $(DEPDIR)/mult16.Tpo $(DEPDIR)/mult16.Plo
#	source='cpu/mult16.cc' object='mult16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mult16.lo `test -f 'cpu/mult16.cc' || echo '$(srcdir)/'`cpu/mult16.cc

tasking.lo: cpu/tasking.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tasking.lo -MD -MP -MF $(DEPDIR)/tasking.Tpo -c -o tasking.lo `test -f 'cpu/tasking.cc' || echo '$(srcdir)/'`cpu/tasking.cc
	$(am__mv) $(DEPDIR)/tasking.Tpo $(DEPDIR)/tasking.Plo
#	source='cpu/tasking.cc' object='tasking.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tasking.lo `test -f 'cpu/tasking.cc' || echo '$(srcdir)/'`cpu/tasking.cc

ctrl_xfer_pro.lo: cpu/ctrl_xfer_pro.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrl_xfer_pro.lo -MD -MP -MF $(DEPDIR)/ctrl_xfer_pro.Tpo -c -o ctrl_xfer_pro.lo `test -f 'cpu/ctrl_xfer_pro.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer_pro.cc
	$(am__mv) $(DEPDIR)/ctrl_xfer_pro.Tpo $(DEPDIR)/ctrl_xfer_pro.Plo
#	source='cpu/ctrl_xfer_pro.cc' object='ctrl_xfer_pro.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrl_xfer_pro.lo `test -f 'cpu/ctrl_xfer_pro.cc' || echo '$(srcdir)/'`cpu/ctrl_xfer_pro.cc

mult32.lo: cpu/mult32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mult32.lo -MD -MP -MF $(DEPDIR)/mult32.Tpo -c -o mult32.lo `test -f 'cpu/mult32.cc' || echo '$(srcdir)/'`cpu/mult32.cc
	$(am__mv) $(DEPDIR)/mult32.Tpo $(DEPDIR)/mult32.Plo
#	source='cpu/mult32.cc' object='mult32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mult32.lo `test -f 'cpu/mult32.cc' || echo '$(srcdir)/'`cpu/mult32.cc

vm8086.lo: cpu/vm8086.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vm8086.lo -MD -MP -MF $(DEPDIR)/vm8086.Tpo -c -o vm8086.lo `test -f 'cpu/vm8086.cc' || echo '$(srcdir)/'`cpu/vm8086.cc
	$(am__mv) $(DEPDIR)/vm8086.Tpo $(DEPDIR)/vm8086.Plo
#	source='cpu/vm8086.cc' object='vm8086.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vm8086.lo `test -f 'cpu/vm8086.cc' || echo '$(srcdir)/'`cpu/vm8086.cc

data_xfer16.lo: cpu/data_xfer16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_xfer16.lo -MD -MP -MF $(DEPDIR)/data_xfer16.Tpo -c -o data_xfer16.lo `test -f 'cpu/data_xfer16.cc' || echo '$(srcdir)/'`cpu/data_xfer16.cc
	$(am__mv) $(DEPDIR)/data_xfer16.Tpo $(DEPDIR)/data_xfer16.Plo
#	source='cpu/data_xfer16.cc' object='data_xfer16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_xfer16.lo `test -f 'cpu/data_xfer16.cc' || echo '$(srcdir)/'`cpu/data_xfer16.cc

mult64.lo: cpu/mult64.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mult64.lo -MD -MP -MF $(DEPDIR)/mult64.Tpo -c -o mult64.lo `test -f 'cpu/mult64.cc' || echo '$(srcdir)/'`cpu/mult64.cc
	$(am__mv) $(DEPDIR)/mult64.Tpo $(DEPDIR)/mult64.Plo
#	source='cpu/mult64.cc' object='mult64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mult64.lo `test -f 'cpu/mult64.cc' || echo '$(srcdir)/'`cpu/mult64.cc

vmexit.lo: cpu/vmexit.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmexit.lo -MD -MP -MF $(DEPDIR)/vmexit.Tpo -c -o vmexit.lo `test -f 'cpu/vmexit.cc' || echo '$(srcdir)/'`cpu/vmexit.cc
	$(am__mv) $(DEPDIR)/vmexit.Tpo $(DEPDIR)/vmexit.Plo
#	source='cpu/vmexit.cc' object='vmexit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmexit.lo `test -f 'cpu/vmexit.cc' || echo '$(srcdir)/'`cpu/vmexit.cc

data_xfer32.lo: cpu/data_xfer32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_xfer32.lo -MD -MP -MF $(DEPDIR)/data_xfer32.Tpo -c -o data_xfer32.lo `test -f 'cpu/data_xfer32.cc' || echo '$(srcdir)/'`cpu/data_xfer32.cc
	$(am__mv) $(DEPDIR)/data_xfer32.Tpo $(DEPDIR)/data_xfer32.Plo
#	source='cpu/data_xfer32.cc' object='data_xfer32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_xfer32.lo `test -f 'cpu/data_xfer32.cc' || echo '$(srcdir)/'`cpu/data_xfer32.cc

mult8.lo: cpu/mult8.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mult8.lo -MD -MP -MF $(DEPDIR)/mult8.Tpo -c -o mult8.lo `test -f 'cpu/mult8.cc' || echo '$(srcdir)/'`cpu/mult8.cc
	$(am__mv) $(DEPDIR)/mult8.Tpo $(DEPDIR)/mult8.Plo
#	source='cpu/mult8.cc' object='mult8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mult8.lo `test -f 'cpu/mult8.cc' || echo '$(srcdir)/'`cpu/mult8.cc

vmx.lo: cpu/vmx.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmx.lo -MD -MP -MF $(DEPDIR)/vmx.Tpo -c -o vmx.lo `test -f 'cpu/vmx.cc' || echo '$(srcdir)/'`cpu/vmx.cc
	$(am__mv) $(DEPDIR)/vmx.Tpo $(DEPDIR)/vmx.Plo
#	source='cpu/vmx.cc' object='vmx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmx.lo `test -f 'cpu/vmx.cc' || echo '$(srcdir)/'`cpu/vmx.cc

paging.lo: cpu/paging.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT paging.lo -MD -MP -MF $(DEPDIR)/paging.Tpo -c -o paging.lo `test -f 'cpu/paging.cc' || echo '$(srcdir)/'`cpu/paging.cc
	$(am__mv) $(DEPDIR)/paging.Tpo $(DEPDIR)/paging.Plo
#	source='cpu/paging.cc' object='paging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o paging.lo `test -f 'cpu/paging.cc' || echo '$(srcdir)/'`cpu/paging.cc

xsave.lo: cpu/xsave.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xsave.lo -MD -MP -MF $(DEPDIR)/xsave.Tpo -c -o xsave.lo `test -f 'cpu/xsave.cc' || echo '$(srcdir)/'`cpu/xsave.cc
	$(am__mv) $(DEPDIR)/xsave.Tpo $(DEPDIR)/xsave.Plo
#	source='cpu/xsave.cc' object='xsave.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xsave.lo `test -f 'cpu/xsave.cc' || echo '$(srcdir)/'`cpu/xsave.cc

f2xm1.lo: fpu/f2xm1.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT f2xm1.lo -MD -MP -MF $(DEPDIR)/f2xm1.Tpo -c -o f2xm1.lo `test -f 'fpu/f2xm1.cc' || echo '$(srcdir)/'`fpu/f2xm1.cc
	$(am__mv) $(DEPDIR)/f2xm1.Tpo $(DEPDIR)/f2xm1.Plo
#	source='fpu/f2xm1.cc' object='f2xm1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o f2xm1.lo `test -f 'fpu/f2xm1.cc' || echo '$(srcdir)/'`fpu/f2xm1.cc

fprem.lo: fpu/fprem.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fprem.lo -MD -MP -MF $(DEPDIR)/fprem.Tpo -c -o fprem.lo `test -f 'fpu/fprem.cc' || echo '$(srcdir)/'`fpu/fprem.cc
	$(am__mv) $(DEPDIR)/fprem.Tpo $(DEPDIR)/fprem.Plo
#	source='fpu/fprem.cc' object='fprem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fprem.lo `test -f 'fpu/fprem.cc' || echo '$(srcdir)/'`fpu/fprem.cc

fpu_compare.lo: fpu/fpu_compare.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_compare.lo -MD -MP -MF $(DEPDIR)/fpu_compare.Tpo -c -o fpu_compare.lo `test -f 'fpu/fpu_compare.cc' || echo '$(srcdir)/'`fpu/fpu_compare.cc
	$(am__mv) $(DEPDIR)/fpu_compare.Tpo $(DEPDIR)/fpu_compare.Plo
#	source='fpu/fpu_compare.cc' object='fpu_compare.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_compare.lo `test -f 'fpu/fpu_compare.cc' || echo '$(srcdir)/'`fpu/fpu_compare.cc

fpu_misc.lo: fpu/fpu_misc.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_misc.lo -MD -MP -MF $(DEPDIR)/fpu_misc.Tpo -c -o fpu_misc.lo `test -f 'fpu/fpu_misc.cc' || echo '$(srcdir)/'`fpu/fpu_misc.cc
	$(am__mv) $(DEPDIR)/fpu_misc.Tpo $(DEPDIR)/fpu_misc.Plo
#	source='fpu/fpu_misc.cc' object='fpu_misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_misc.lo `test -f 'fpu/fpu_misc.cc' || echo '$(srcdir)/'`fpu/fpu_misc.cc

fsincos.lo: fpu/fsincos.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fsincos.lo -MD -MP -MF $(DEPDIR)/fsincos.Tpo -c -o fsincos.lo `test -f 'fpu/fsincos.cc' || echo '$(srcdir)/'`fpu/fsincos.cc
	$(am__mv) $(DEPDIR)/fsincos.Tpo $(DEPDIR)/fsincos.Plo
#	source='fpu/fsincos.cc' object='fsincos.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fsincos.lo `test -f 'fpu/fsincos.cc' || echo '$(srcdir)/'`fpu/fsincos.cc

softfloat.lo: fpu/softfloat.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT softfloat.lo -MD -MP -MF $(DEPDIR)/softfloat.Tpo -c -o softfloat.lo `test -f 'fpu/softfloat.cc' || echo '$(srcdir)/'`fpu/softfloat.cc
	$(am__mv) $(DEPDIR)/softfloat.Tpo $(DEPDIR)/softfloat.Plo
#	source='fpu/softfloat.cc' object='softfloat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o softfloat.lo `test -f 'fpu/softfloat.cc' || echo '$(srcdir)/'`fpu/softfloat.cc

softfloatx80.lo: fpu/softfloatx80.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT softfloatx80.lo -MD -MP -MF $(DEPDIR)/softfloatx80.Tpo -c -o softfloatx80.lo `test -f 'fpu/softfloatx80.cc' || echo '$(srcdir)/'`fpu/softfloatx80.cc
	$(am__mv) $(DEPDIR)/softfloatx80.Tpo $(DEPDIR)/softfloatx80.Plo
#	source='fpu/softfloatx80.cc' object='softfloatx80.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o softfloatx80.lo `test -f 'fpu/softfloatx80.cc' || echo '$(srcdir)/'`fpu/softfloatx80.cc

ferr.lo: fpu/ferr.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ferr.lo -MD -MP -MF $(DEPDIR)/ferr.Tpo -c -o ferr.lo `test -f 'fpu/ferr.cc' || echo '$(srcdir)/'`fpu/ferr.cc
	$(am__mv) $(DEPDIR)/ferr.Tpo $(DEPDIR)/ferr.Plo
#	source='fpu/ferr.cc' object='ferr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ferr.lo `test -f 'fpu/ferr.cc' || echo '$(srcdir)/'`fpu/ferr.cc

fpu_arith.lo: fpu/fpu_arith.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_arith.lo -MD -MP -MF $(DEPDIR)/fpu_arith.Tpo -c -o fpu_arith.lo `test -f 'fpu/fpu_arith.cc' || echo '$(srcdir)/'`fpu/fpu_arith.cc
	$(am__mv) $(DEPDIR)/fpu_arith.Tpo $(DEPDIR)/fpu_arith.Plo
#	source='fpu/fpu_arith.cc' object='fpu_arith.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_arith.lo `test -f 'fpu/fpu_arith.cc' || echo '$(srcdir)/'`fpu/fpu_arith.cc

fpu_const.lo: fpu/fpu_const.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_const.lo -MD -MP -MF $(DEPDIR)/fpu_const.Tpo -c -o fpu_const.lo `test -f 'fpu/fpu_const.cc' || echo '$(srcdir)/'`fpu/fpu_const.cc
	$(am__mv) $(DEPDIR)/fpu_const.Tpo $(DEPDIR)/fpu_const.Plo
#	source='fpu/fpu_const.cc' object='fpu_const.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_const.lo `test -f 'fpu/fpu_const.cc' || echo '$(srcdir)/'`fpu/fpu_const.cc

fpu_tags.lo: fpu/fpu_tags.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_tags.lo -MD -MP -MF $(DEPDIR)/fpu_tags.Tpo -c -o fpu_tags.lo `test -f 'fpu/fpu_tags.cc' || echo '$(srcdir)/'`fpu/fpu_tags.cc
	$(am__mv) $(DEPDIR)/fpu_tags.Tpo $(DEPDIR)/fpu_tags.Plo
#	source='fpu/fpu_tags.cc' object='fpu_tags.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_tags.lo `test -f 'fpu/fpu_tags.cc' || echo '$(srcdir)/'`fpu/fpu_tags.cc

fyl2x.lo: fpu/fyl2x.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fyl2x.lo -MD -MP -MF $(DEPDIR)/fyl2x.Tpo -c -o fyl2x.lo `test -f 'fpu/fyl2x.cc' || echo '$(srcdir)/'`fpu/fyl2x.cc
	$(am__mv) $(DEPDIR)/fyl2x.Tpo $(DEPDIR)/fyl2x.Plo
#	source='fpu/fyl2x.cc' object='fyl2x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fyl2x.lo `test -f 'fpu/fyl2x.cc' || echo '$(srcdir)/'`fpu/fyl2x.cc

softfloat-round-pack.lo: fpu/softfloat-round-pack.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT softfloat-round-pack.lo -MD -MP -MF $(DEPDIR)/softfloat-round-pack.Tpo -c -o softfloat-round-pack.lo `test -f 'fpu/softfloat-round-pack.cc' || echo '$(srcdir)/'`fpu/softfloat-round-pack.cc
	$(am__mv) $(DEPDIR)/softfloat-round-pack.Tpo $(DEPDIR)/softfloat-round-pack.Plo
#	source='fpu/softfloat-round-pack.cc' object='softfloat-round-pack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o softfloat-round-pack.lo `test -f 'fpu/softfloat-round-pack.cc' || echo '$(srcdir)/'`fpu/softfloat-round-pack.cc

fpatan.lo: fpu/fpatan.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpatan.lo -MD -MP -MF $(DEPDIR)/fpatan.Tpo -c -o fpatan.lo `test -f 'fpu/fpatan.cc' || echo '$(srcdir)/'`fpu/fpatan.cc
	$(am__mv) $(DEPDIR)/fpatan.Tpo $(DEPDIR)/fpatan.Plo
#	source='fpu/fpatan.cc' object='fpatan.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpatan.lo `test -f 'fpu/fpatan.cc' || echo '$(srcdir)/'`fpu/fpatan.cc

fpu.lo: fpu/fpu.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu.lo -MD -MP -MF $(DEPDIR)/fpu.Tpo -c -o fpu.lo `test -f 'fpu/fpu.cc' || echo '$(srcdir)/'`fpu/fpu.cc
	$(am__mv) $(DEPDIR)/fpu.Tpo $(DEPDIR)/fpu.Plo
#	source='fpu/fpu.cc' object='fpu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu.lo `test -f 'fpu/fpu.cc' || echo '$(srcdir)/'`fpu/fpu.cc

fpu_load_store.lo: fpu/fpu_load_store.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_load_store.lo -MD -MP -MF $(DEPDIR)/fpu_load_store.Tpo -c -o fpu_load_store.lo `test -f 'fpu/fpu_load_store.cc' || echo '$(srcdir)/'`fpu/fpu_load_store.cc
	$(am__mv) $(DEPDIR)/fpu_load_store.Tpo $(DEPDIR)/fpu_load_store.Plo
#	source='fpu/fpu_load_store.cc' object='fpu_load_store.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_load_store.lo `test -f 'fpu/fpu_load_store.cc' || echo '$(srcdir)/'`fpu/fpu_load_store.cc

fpu_trans.lo: fpu/fpu_trans.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpu_trans.lo -MD -MP -MF $(DEPDIR)/fpu_trans.Tpo -c -o fpu_trans.lo `test -f 'fpu/fpu_trans.cc' || echo '$(srcdir)/'`fpu/fpu_trans.cc
	$(am__mv) $(DEPDIR)/fpu_trans.Tpo $(DEPDIR)/fpu_trans.Plo
#	source='fpu/fpu_trans.cc' object='fpu_trans.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpu_trans.lo `test -f 'fpu/fpu_trans.cc' || echo '$(srcdir)/'`fpu/fpu_trans.cc

poly.lo: fpu/poly.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT poly.lo -MD -MP -MF $(DEPDIR)/poly.Tpo -c -o poly.lo `test -f 'fpu/poly.cc' || echo '$(srcdir)/'`fpu/poly.cc
	$(am__mv) $(DEPDIR)/poly.Tpo $(DEPDIR)/poly.Plo
#	source='fpu/poly.cc' object='poly.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o poly.lo `test -f 'fpu/poly.cc' || echo '$(srcdir)/'`fpu/poly.cc

softfloat-specialize.lo: fpu/softfloat-specialize.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT softfloat-specialize.lo -MD -MP -MF $(DEPDIR)/softfloat-specialize.Tpo -c -o softfloat-specialize.lo `test -f 'fpu/softfloat-specialize.cc' || echo '$(srcdir)/'`fpu/softfloat-specialize.cc
	$(am__mv) $(DEPDIR)/softfloat-specialize.Tpo $(DEPDIR)/softfloat-specialize.Plo
#	source='fpu/softfloat-specialize.cc' object='softfloat-specialize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o softfloat-specialize.lo `test -f 'fpu/softfloat-specialize.cc' || echo '$(srcdir)/'`fpu/softfloat-specialize.cc

x86_arch_interface.lo: common/x86_arch_interface.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86_arch_interface.lo -MD -MP -MF $(DEPDIR)/x86_arch_interface.Tpo -c -o x86_arch_interface.lo `test -f 'common/x86_arch_interface.cc' || echo '$(srcdir)/'`common/x86_arch_interface.cc
	$(am__mv) $(DEPDIR)/x86_arch_interface.Tpo $(DEPDIR)/x86_arch_interface.Plo
#	source='common/x86_arch_interface.cc' object='x86_arch_interface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86_arch_interface.lo `test -f 'common/x86_arch_interface.cc' || echo '$(srcdir)/'`common/x86_arch_interface.cc

logio.lo: common/logio.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logio.lo -MD -MP -MF $(DEPDIR)/logio.Tpo -c -o logio.lo `test -f 'common/logio.cc' || echo '$(srcdir)/'`common/logio.cc
	$(am__mv) $(DEPDIR)/logio.Tpo $(DEPDIR)/logio.Plo
#	source='common/logio.cc' object='logio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logio.lo `test -f 'common/logio.cc' || echo '$(srcdir)/'`common/logio.cc

pc_system.lo: common/pc_system.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pc_system.lo -MD -MP -MF $(DEPDIR)/pc_system.Tpo -c -o pc_system.lo `test -f 'common/pc_system.cc' || echo '$(srcdir)/'`common/pc_system.cc
	$(am__mv) $(DEPDIR)/pc_system.Tpo $(DEPDIR)/pc_system.Plo
#	source='common/pc_system.cc' object='pc_system.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pc_system.lo `test -f 'common/pc_system.cc' || echo '$(srcdir)/'`common/pc_system.cc

x86_module.lo: common/x86_module.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x86_module.lo -MD -MP -MF $(DEPDIR)/x86_module.Tpo -c -o x86_module.lo `test -f 'common/x86_module.cc' || echo '$(srcdir)/'`common/x86_module.cc
	$(am__mv) $(DEPDIR)/x86_module.Tpo $(DEPDIR)/x86_module.Plo
#	source='common/x86_module.cc' object='x86_module.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x86_module.lo `test -f 'common/x86_module.cc' || echo '$(srcdir)/'`common/x86_module.cc

main.lo: common/main.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT main.lo -MD -MP -MF $(DEPDIR)/main.Tpo -c -o main.lo `test -f 'common/main.cc' || echo '$(srcdir)/'`common/main.cc
	$(am__mv) $(DEPDIR)/main.Tpo $(DEPDIR)/main.Plo
#	source='common/main.cc' object='main.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o main.lo `test -f 'common/main.cc' || echo '$(srcdir)/'`common/main.cc

config.lo: common/config.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT config.lo -MD -MP -MF $(DEPDIR)/config.Tpo -c -o config.lo `test -f 'common/config.cc' || echo '$(srcdir)/'`common/config.cc
	$(am__mv) $(DEPDIR)/config.Tpo $(DEPDIR)/config.Plo
#	source='common/config.cc' object='config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o config.lo `test -f 'common/config.cc' || echo '$(srcdir)/'`common/config.cc

plugin.lo: common/plugin.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT plugin.lo -MD -MP -MF $(DEPDIR)/plugin.Tpo -c -o plugin.lo `test -f 'common/plugin.cc' || echo '$(srcdir)/'`common/plugin.cc
	$(am__mv) $(DEPDIR)/plugin.Tpo $(DEPDIR)/plugin.Plo
#	source='common/plugin.cc' object='plugin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o plugin.lo `test -f 'common/plugin.cc' || echo '$(srcdir)/'`common/plugin.cc

osdep.lo: common/osdep.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osdep.lo -MD -MP -MF $(DEPDIR)/osdep.Tpo -c -o osdep.lo `test -f 'common/osdep.cc' || echo '$(srcdir)/'`common/osdep.cc
	$(am__mv) $(DEPDIR)/osdep.Tpo $(DEPDIR)/osdep.Plo
#	source='common/osdep.cc' object='osdep.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osdep.lo `test -f 'common/osdep.cc' || echo '$(srcdir)/'`common/osdep.cc

memory.lo: memory/memory.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT memory.lo -MD -MP -MF $(DEPDIR)/memory.Tpo -c -o memory.lo `test -f 'memory/memory.cc' || echo '$(srcdir)/'`memory/memory.cc
	$(am__mv) $(DEPDIR)/memory.Tpo $(DEPDIR)/memory.Plo
#	source='memory/memory.cc' object='memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o memory.lo `test -f 'memory/memory.cc' || echo '$(srcdir)/'`memory/memory.cc

misc_mem.lo: memory/misc_mem.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT misc_mem.lo -MD -MP -MF $(DEPDIR)/misc_mem.Tpo -c -o misc_mem.lo `test -f 'memory/misc_mem.cc' || echo '$(srcdir)/'`memory/misc_mem.cc
	$(am__mv) $(DEPDIR)/misc_mem.Tpo $(DEPDIR)/misc_mem.Plo
#	source='memory/misc_mem.cc' object='misc_mem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o misc_mem.lo `test -f 'memory/misc_mem.cc' || echo '$(srcdir)/'`memory/misc_mem.cc

skyeye_mach_pc.lo: mach/skyeye_mach_pc.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT skyeye_mach_pc.lo -MD -MP -MF $(DEPDIR)/skyeye_mach_pc.Tpo -c -o skyeye_mach_pc.lo `test -f 'mach/skyeye_mach_pc.cc' || echo '$(srcdir)/'`mach/skyeye_mach_pc.cc
	$(am__mv) $(DEPDIR)/skyeye_mach_pc.Tpo $(DEPDIR)/skyeye_mach_pc.Plo
#	source='mach/skyeye_mach_pc.cc' object='skyeye_mach_pc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o skyeye_mach_pc.lo `test -f 'mach/skyeye_mach_pc.cc' || echo '$(srcdir)/'`mach/skyeye_mach_pc.cc

acpi.lo: iodev/acpi.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT acpi.lo -MD -MP -MF $(DEPDIR)/acpi.Tpo -c -o acpi.lo `test -f 'iodev/acpi.cc' || echo '$(srcdir)/'`iodev/acpi.cc
	$(am__mv) $(DEPDIR)/acpi.Tpo $(DEPDIR)/acpi.Plo
#	source='iodev/acpi.cc' object='acpi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o acpi.lo `test -f 'iodev/acpi.cc' || echo '$(srcdir)/'`iodev/acpi.cc

extfpuirq.lo: iodev/extfpuirq.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT extfpuirq.lo -MD -MP -MF $(DEPDIR)/extfpuirq.Tpo -c -o extfpuirq.lo `test -f 'iodev/extfpuirq.cc' || echo '$(srcdir)/'`iodev/extfpuirq.cc
	$(am__mv) $(DEPDIR)/extfpuirq.Tpo $(DEPDIR)/extfpuirq.Plo
#	source='iodev/extfpuirq.cc' object='extfpuirq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o extfpuirq.lo `test -f 'iodev/extfpuirq.cc' || echo '$(srcdir)/'`iodev/extfpuirq.cc

scancodes.lo: iodev/scancodes.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scancodes.lo -MD -MP -MF $(DEPDIR)/scancodes.Tpo -c -o scancodes.lo `test -f 'iodev/scancodes.cc' || echo '$(srcdir)/'`iodev/scancodes.cc
	$(am__mv) $(DEPDIR)/scancodes.Tpo $(DEPDIR)/scancodes.Plo
#	source='iodev/scancodes.cc' object='scancodes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scancodes.lo `test -f 'iodev/scancodes.cc' || echo '$(srcdir)/'`iodev/scancodes.cc

biosdev.lo: iodev/biosdev.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT biosdev.lo -MD -MP -MF $(DEPDIR)/biosdev.Tpo -c -o biosdev.lo `test -f 'iodev/biosdev.cc' || echo '$(srcdir)/'`iodev/biosdev.cc
	$(am__mv) $(DEPDIR)/biosdev.Tpo $(DEPDIR)/biosdev.Plo
#	source='iodev/biosdev.cc' object='biosdev.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o biosdev.lo `test -f 'iodev/biosdev.cc' || echo '$(srcdir)/'`iodev/biosdev.cc

floppy.lo: iodev/floppy.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT floppy.lo -MD -MP -MF $(DEPDIR)/floppy.Tpo -c -o floppy.lo `test -f 'iodev/floppy.cc' || echo '$(srcdir)/'`iodev/floppy.cc
	$(am__mv) $(DEPDIR)/floppy.Tpo $(DEPDIR)/floppy.Plo
#	source='iodev/floppy.cc' object='floppy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o floppy.lo `test -f 'iodev/floppy.cc' || echo '$(srcdir)/'`iodev/floppy.cc

scsi_device.lo: iodev/scsi_device.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scsi_device.lo -MD -MP -MF $(DEPDIR)/scsi_device.Tpo -c -o scsi_device.lo `test -f 'iodev/scsi_device.cc' || echo '$(srcdir)/'`iodev/scsi_device.cc
	$(am__mv) $(DEPDIR)/scsi_device.Tpo $(DEPDIR)/scsi_device.Plo
#	source='iodev/scsi_device.cc' object='scsi_device.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scsi_device.lo `test -f 'iodev/scsi_device.cc' || echo '$(srcdir)/'`iodev/scsi_device.cc

busmouse.lo: iodev/busmouse.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT busmouse.lo -MD -MP -MF $(DEPDIR)/busmouse.Tpo -c -o busmouse.lo `test -f 'iodev/busmouse.cc' || echo '$(srcdir)/'`iodev/busmouse.cc
	$(am__mv) $(DEPDIR)/busmouse.Tpo $(DEPDIR)/busmouse.Plo
#	source='iodev/busmouse.cc' object='busmouse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o busmouse.lo `test -f 'iodev/busmouse.cc' || echo '$(srcdir)/'`iodev/busmouse.cc

gameport.lo: iodev/gameport.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gameport.lo -MD -MP -MF $(DEPDIR)/gameport.Tpo -c -o gameport.lo `test -f 'iodev/gameport.cc' || echo '$(srcdir)/'`iodev/gameport.cc
	$(am__mv) $(DEPDIR)/gameport.Tpo $(DEPDIR)/gameport.Plo
#	source='iodev/gameport.cc' object='gameport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gameport.lo `test -f 'iodev/gameport.cc' || echo '$(srcdir)/'`iodev/gameport.cc

serial.lo: iodev/serial.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT serial.lo -MD -MP -MF $(DEPDIR)/serial.Tpo -c -o serial.lo `test -f 'iodev/serial.cc' || echo '$(srcdir)/'`iodev/serial.cc
	$(am__mv) $(DEPDIR)/serial.Tpo $(DEPDIR)/serial.Plo
#	source='iodev/serial.cc' object='serial.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o serial.lo `test -f 'iodev/serial.cc' || echo '$(srcdir)/'`iodev/serial.cc

serial_raw.lo: iodev/serial_raw.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT serial_raw.lo -MD -MP -MF $(DEPDIR)/serial_raw.Tpo -c -o serial_raw.lo `test -f 'iodev/serial_raw.cc' || echo '$(srcdir)/'`iodev/serial_raw.cc
	$(am__mv) $(DEPDIR)/serial_raw.Tpo $(DEPDIR)/serial_raw.Plo
#	source='iodev/serial_raw.cc' object='serial_raw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o serial_raw.lo `test -f 'iodev/serial_raw.cc' || echo '$(srcdir)/'`iodev/serial_raw.cc

harddrv.lo: iodev/harddrv.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT harddrv.lo -MD -MP -MF $(DEPDIR)/harddrv.Tpo -c -o harddrv.lo `test -f 'iodev/harddrv.cc' || echo '$(srcdir)/'`iodev/harddrv.cc
	$(am__mv) $(DEPDIR)/harddrv.Tpo $(DEPDIR)/harddrv.Plo
#	source='iodev/harddrv.cc' object='harddrv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o harddrv.lo `test -f 'iodev/harddrv.cc' || echo '$(srcdir)/'`iodev/harddrv.cc

slowdown_timer.lo: iodev/slowdown_timer.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT slowdown_timer.lo -MD -MP -MF $(DEPDIR)/slowdown_timer.Tpo -c -o slowdown_timer.lo `test -f 'iodev/slowdown_timer.cc' || echo '$(srcdir)/'`iodev/slowdown_timer.cc
	$(am__mv) $(DEPDIR)/slowdown_timer.Tpo $(DEPDIR)/slowdown_timer.Plo
#	source='iodev/slowdown_timer.cc' object='slowdown_timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o slowdown_timer.lo `test -f 'iodev/slowdown_timer.cc' || echo '$(srcdir)/'`iodev/slowdown_timer.cc

cdrom.lo: iodev/cdrom.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cdrom.lo -MD -MP -MF $(DEPDIR)/cdrom.Tpo -c -o cdrom.lo `test -f 'iodev/cdrom.cc' || echo '$(srcdir)/'`iodev/cdrom.cc
	$(am__mv) $(DEPDIR)/cdrom.Tpo $(DEPDIR)/cdrom.Plo
#	source='iodev/cdrom.cc' object='cdrom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cdrom.lo `test -f 'iodev/cdrom.cc' || echo '$(srcdir)/'`iodev/cdrom.cc

hdimage.lo: iodev/hdimage.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hdimage.lo -MD -MP -MF $(DEPDIR)/hdimage.Tpo -c -o hdimage.lo `test -f 'iodev/hdimage.cc' || echo '$(srcdir)/'`iodev/hdimage.cc
	$(am__mv) $(DEPDIR)/hdimage.Tpo $(DEPDIR)/hdimage.Plo
#	source='iodev/hdimage.cc' object='hdimage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hdimage.lo `test -f 'iodev/hdimage.cc' || echo '$(srcdir)/'`iodev/hdimage.cc

soundlnx.lo: iodev/soundlnx.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT soundlnx.lo -MD -MP -MF $(DEPDIR)/soundlnx.Tpo -c -o soundlnx.lo `test -f 'iodev/soundlnx.cc' || echo '$(srcdir)/'`iodev/soundlnx.cc
	$(am__mv) $(DEPDIR)/soundlnx.Tpo $(DEPDIR)/soundlnx.Plo
#	source='iodev/soundlnx.cc' object='soundlnx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o soundlnx.lo `test -f 'iodev/soundlnx.cc' || echo '$(srcdir)/'`iodev/soundlnx.cc

cmos.lo: iodev/cmos.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmos.lo -MD -MP -MF $(DEPDIR)/cmos.Tpo -c -o cmos.lo `test -f 'iodev/cmos.cc' || echo '$(srcdir)/'`iodev/cmos.cc
	$(am__mv) $(DEPDIR)/cmos.Tpo $(DEPDIR)/cmos.Plo
#	source='iodev/cmos.cc' object='cmos.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmos.lo `test -f 'iodev/cmos.cc' || echo '$(srcdir)/'`iodev/cmos.cc

ioapic.lo: iodev/ioapic.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ioapic.lo -MD -MP -MF $(DEPDIR)/ioapic.Tpo -c -o ioapic.lo `test -f 'iodev/ioapic.cc' || echo '$(srcdir)/'`iodev/ioapic.cc
	$(am__mv) $(DEPDIR)/ioapic.Tpo $(DEPDIR)/ioapic.Plo
#	source='iodev/ioapic.cc' object='ioapic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ioapic.lo `test -f 'iodev/ioapic.cc' || echo '$(srcdir)/'`iodev/ioapic.cc

soundosx.lo: iodev/soundosx.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT soundosx.lo -MD -MP -MF $(DEPDIR)/soundosx.Tpo -c -o soundosx.lo `test -f 'iodev/soundosx.cc' || echo '$(srcdir)/'`iodev/soundosx.cc
	$(am__mv) $(DEPDIR)/soundosx.Tpo $(DEPDIR)/soundosx.Plo
#	source='iodev/soundosx.cc' object='soundosx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o soundosx.lo `test -f 'iodev/soundosx.cc' || echo '$(srcdir)/'`iodev/soundosx.cc

iodebug.lo: iodev/iodebug.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT iodebug.lo -MD -MP -MF $(DEPDIR)/iodebug.Tpo -c -o iodebug.lo `test -f 'iodev/iodebug.cc' || echo '$(srcdir)/'`iodev/iodebug.cc
	$(am__mv) $(DEPDIR)/iodebug.Tpo $(DEPDIR)/iodebug.Plo
#	source='iodev/iodebug.cc' object='iodebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o iodebug.lo `test -f 'iodev/iodebug.cc' || echo '$(srcdir)/'`iodev/iodebug.cc

soundwin.lo: iodev/soundwin.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT soundwin.lo -MD -MP -MF $(DEPDIR)/soundwin.Tpo -c -o soundwin.lo `test -f 'iodev/soundwin.cc' || echo '$(srcdir)/'`iodev/soundwin.cc
	$(am__mv) $(DEPDIR)/soundwin.Tpo $(DEPDIR)/soundwin.Plo
#	source='iodev/soundwin.cc' object='soundwin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o soundwin.lo `test -f 'iodev/soundwin.cc' || echo '$(srcdir)/'`iodev/soundwin.cc

devices.lo: iodev/devices.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT devices.lo -MD -MP -MF $(DEPDIR)/devices.Tpo -c -o devices.lo `test -f 'iodev/devices.cc' || echo '$(srcdir)/'`iodev/devices.cc
	$(am__mv) $(DEPDIR)/devices.Tpo $(DEPDIR)/devices.Plo
#	source='iodev/devices.cc' object='devices.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o devices.lo `test -f 'iodev/devices.cc' || echo '$(srcdir)/'`iodev/devices.cc

keyboard.lo: iodev/keyboard.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keyboard.lo -MD -MP -MF $(DEPDIR)/keyboard.Tpo -c -o keyboard.lo `test -f 'iodev/keyboard.cc' || echo '$(srcdir)/'`iodev/keyboard.cc
	$(am__mv) $(DEPDIR)/keyboard.Tpo $(DEPDIR)/keyboard.Plo
#	source='iodev/keyboard.cc' object='keyboard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keyboard.lo `test -f 'iodev/keyboard.cc' || echo '$(srcdir)/'`iodev/keyboard.cc

speaker.lo: iodev/speaker.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT speaker.lo -MD -MP -MF $(DEPDIR)/speaker.Tpo -c -o speaker.lo `test -f 'iodev/speaker.cc' || echo '$(srcdir)/'`iodev/speaker.cc
	$(am__mv) $(DEPDIR)/speaker.Tpo $(DEPDIR)/speaker.Plo
#	source='iodev/speaker.cc' object='speaker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o speaker.lo `test -f 'iodev/speaker.cc' || echo '$(srcdir)/'`iodev/speaker.cc

dma.lo: iodev/dma.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dma.lo -MD -MP -MF $(DEPDIR)/dma.Tpo -c -o dma.lo `test -f 'iodev/dma.cc' || echo '$(srcdir)/'`iodev/dma.cc
	$(am__mv) $(DEPDIR)/dma.Tpo $(DEPDIR)/dma.Plo
#	source='iodev/dma.cc' object='dma.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dma.lo `test -f 'iodev/dma.cc' || echo '$(srcdir)/'`iodev/dma.cc

ne2k.lo: iodev/ne2k.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ne2k.lo -MD -MP -MF $(DEPDIR)/ne2k.Tpo -c -o ne2k.lo `test -f 'iodev/ne2k.cc' || echo '$(srcdir)/'`iodev/ne2k.cc
	$(am__mv) $(DEPDIR)/ne2k.Tpo $(DEPDIR)/ne2k.Plo
#	source='iodev/ne2k.cc' object='ne2k.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ne2k.lo `test -f 'iodev/ne2k.cc' || echo '$(srcdir)/'`iodev/ne2k.cc

svga_cirrus.lo: iodev/svga_cirrus.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svga_cirrus.lo -MD -MP -MF $(DEPDIR)/svga_cirrus.Tpo -c -o svga_cirrus.lo `test -f 'iodev/svga_cirrus.cc' || echo '$(srcdir)/'`iodev/svga_cirrus.cc
	$(am__mv) $(DEPDIR)/svga_cirrus.Tpo $(DEPDIR)/svga_cirrus.Plo
#	source='iodev/svga_cirrus.cc' object='svga_cirrus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svga_cirrus.lo `test -f 'iodev/svga_cirrus.cc' || echo '$(srcdir)/'`iodev/svga_cirrus.cc

eth_arpback.lo: iodev/eth_arpback.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_arpback.lo -MD -MP -MF $(DEPDIR)/eth_arpback.Tpo -c -o eth_arpback.lo `test -f 'iodev/eth_arpback.cc' || echo '$(srcdir)/'`iodev/eth_arpback.cc
	$(am__mv) $(DEPDIR)/eth_arpback.Tpo $(DEPDIR)/eth_arpback.Plo
#	source='iodev/eth_arpback.cc' object='eth_arpback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_arpback.lo `test -f 'iodev/eth_arpback.cc' || echo '$(srcdir)/'`iodev/eth_arpback.cc

parallel.lo: iodev/parallel.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parallel.lo -MD -MP -MF $(DEPDIR)/parallel.Tpo -c -o parallel.lo `test -f 'iodev/parallel.cc' || echo '$(srcdir)/'`iodev/parallel.cc
	$(am__mv) $(DEPDIR)/parallel.Tpo $(DEPDIR)/parallel.Plo
#	source='iodev/parallel.cc' object='parallel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parallel.lo `test -f 'iodev/parallel.cc' || echo '$(srcdir)/'`iodev/parallel.cc

unmapped.lo: iodev/unmapped.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT unmapped.lo -MD -MP -MF $(DEPDIR)/unmapped.Tpo -c -o unmapped.lo `test -f 'iodev/unmapped.cc' || echo '$(srcdir)/'`iodev/unmapped.cc
	$(am__mv) $(DEPDIR)/unmapped.Tpo $(DEPDIR)/unmapped.Plo
#	source='iodev/unmapped.cc' object='unmapped.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o unmapped.lo `test -f 'iodev/unmapped.cc' || echo '$(srcdir)/'`iodev/unmapped.cc

eth.lo: iodev/eth.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth.lo -MD -MP -MF $(DEPDIR)/eth.Tpo -c -o eth.lo `test -f 'iodev/eth.cc' || echo '$(srcdir)/'`iodev/eth.cc
	$(am__mv) $(DEPDIR)/eth.Tpo $(DEPDIR)/eth.Plo
#	source='iodev/eth.cc' object='eth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth.lo `test -f 'iodev/eth.cc' || echo '$(srcdir)/'`iodev/eth.cc

pci2isa.lo: iodev/pci2isa.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pci2isa.lo -MD -MP -MF $(DEPDIR)/pci2isa.Tpo -c -o pci2isa.lo `test -f 'iodev/pci2isa.cc' || echo '$(srcdir)/'`iodev/pci2isa.cc
	$(am__mv) $(DEPDIR)/pci2isa.Tpo $(DEPDIR)/pci2isa.Plo
#	source='iodev/pci2isa.cc' object='pci2isa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pci2isa.lo `test -f 'iodev/pci2isa.cc' || echo '$(srcdir)/'`iodev/pci2isa.cc

usb_common.lo: iodev/usb_common.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT usb_common.lo -MD -MP -MF $(DEPDIR)/usb_common.Tpo -c -o usb_common.lo `test -f 'iodev/usb_common.cc' || echo '$(srcdir)/'`iodev/usb_common.cc
	$(am__mv) $(DEPDIR)/usb_common.Tpo $(DEPDIR)/usb_common.Plo
#	source='iodev/usb_common.cc' object='usb_common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o usb_common.lo `test -f 'iodev/usb_common.cc' || echo '$(srcdir)/'`iodev/usb_common.cc

eth_fbsd.lo: iodev/eth_fbsd.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_fbsd.lo -MD -MP -MF $(DEPDIR)/eth_fbsd.Tpo -c -o eth_fbsd.lo `test -f 'iodev/eth_fbsd.cc' || echo '$(srcdir)/'`iodev/eth_fbsd.cc
	$(am__mv) $(DEPDIR)/eth_fbsd.Tpo $(DEPDIR)/eth_fbsd.Plo
#	source='iodev/eth_fbsd.cc' object='eth_fbsd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_fbsd.lo `test -f 'iodev/eth_fbsd.cc' || echo '$(srcdir)/'`iodev/eth_fbsd.cc

pci.lo: iodev/pci.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pci.lo -MD -MP -MF $(DEPDIR)/pci.Tpo -c -o pci.lo `test -f 'iodev/pci.cc' || echo '$(srcdir)/'`iodev/pci.cc
	$(am__mv) $(DEPDIR)/pci.Tpo $(DEPDIR)/pci.Plo
#	source='iodev/pci.cc' object='pci.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pci.lo `test -f 'iodev/pci.cc' || echo '$(srcdir)/'`iodev/pci.cc

usb_hid.lo: iodev/usb_hid.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT usb_hid.lo -MD -MP -MF $(DEPDIR)/usb_hid.Tpo -c -o usb_hid.lo `test -f 'iodev/usb_hid.cc' || echo '$(srcdir)/'`iodev/usb_hid.cc
	$(am__mv) $(DEPDIR)/usb_hid.Tpo $(DEPDIR)/usb_hid.Plo
#	source='iodev/usb_hid.cc' object='usb_hid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o usb_hid.lo `test -f 'iodev/usb_hid.cc' || echo '$(srcdir)/'`iodev/usb_hid.cc

eth_linux.lo: iodev/eth_linux.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_linux.lo -MD -MP -MF $(DEPDIR)/eth_linux.Tpo -c -o eth_linux.lo `test -f 'iodev/eth_linux.cc' || echo '$(srcdir)/'`iodev/eth_linux.cc
	$(am__mv) $(DEPDIR)/eth_linux.Tpo $(DEPDIR)/eth_linux.Plo
#	source='iodev/eth_linux.cc' object='eth_linux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_linux.lo `test -f 'iodev/eth_linux.cc' || echo '$(srcdir)/'`iodev/eth_linux.cc

pcidev.lo: iodev/pcidev.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pcidev.lo -MD -MP -MF $(DEPDIR)/pcidev.Tpo -c -o pcidev.lo `test -f 'iodev/pcidev.cc' || echo '$(srcdir)/'`iodev/pcidev.cc
	$(am__mv) $(DEPDIR)/pcidev.Tpo $(DEPDIR)/pcidev.Plo
#	source='iodev/pcidev.cc' object='pcidev.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pcidev.lo `test -f 'iodev/pcidev.cc' || echo '$(srcdir)/'`iodev/pcidev.cc

usb_hub.lo: iodev/usb_hub.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT usb_hub.lo -MD -MP -MF $(DEPDIR)/usb_hub.Tpo -c -o usb_hub.lo `test -f 'iodev/usb_hub.cc' || echo '$(srcdir)/'`iodev/usb_hub.cc
	$(am__mv) $(DEPDIR)/usb_hub.Tpo $(DEPDIR)/usb_hub.Plo
#	source='iodev/usb_hub.cc' object='usb_hub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o usb_hub.lo `test -f 'iodev/usb_hub.cc' || echo '$(srcdir)/'`iodev/usb_hub.cc

eth_null.lo: iodev/eth_null.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_null.lo -MD -MP -MF $(DEPDIR)/eth_null.Tpo -c -o eth_null.lo `test -f 'iodev/eth_null.cc' || echo '$(srcdir)/'`iodev/eth_null.cc
	$(am__mv) $(DEPDIR)/eth_null.Tpo $(DEPDIR)/eth_null.Plo
#	source='iodev/eth_null.cc' object='eth_null.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_null.lo `test -f 'iodev/eth_null.cc' || echo '$(srcdir)/'`iodev/eth_null.cc

pci_ide.lo: iodev/pci_ide.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pci_ide.lo -MD -MP -MF $(DEPDIR)/pci_ide.Tpo -c -o pci_ide.lo `test -f 'iodev/pci_ide.cc' || echo '$(srcdir)/'`iodev/pci_ide.cc
	$(am__mv) $(DEPDIR)/pci_ide.Tpo $(DEPDIR)/pci_ide.Plo
#	source='iodev/pci_ide.cc' object='pci_ide.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pci_ide.lo `test -f 'iodev/pci_ide.cc' || echo '$(srcdir)/'`iodev/pci_ide.cc

usb_msd.lo: iodev/usb_msd.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT usb_msd.lo -MD -MP -MF $(DEPDIR)/usb_msd.Tpo -c -o usb_msd.lo `test -f 'iodev/usb_msd.cc' || echo '$(srcdir)/'`iodev/usb_msd.cc
	$(am__mv) $(DEPDIR)/usb_msd.Tpo $(DEPDIR)/usb_msd.Plo
#	source='iodev/usb_msd.cc' object='usb_msd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o usb_msd.lo `test -f 'iodev/usb_msd.cc' || echo '$(srcdir)/'`iodev/usb_msd.cc

eth_packetmaker.lo: iodev/eth_packetmaker.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_packetmaker.lo -MD -MP -MF $(DEPDIR)/eth_packetmaker.Tpo -c -o eth_packetmaker.lo `test -f 'iodev/eth_packetmaker.cc' || echo '$(srcdir)/'`iodev/eth_packetmaker.cc
	$(am__mv) $(DEPDIR)/eth_packetmaker.Tpo $(DEPDIR)/eth_packetmaker.Plo
#	source='iodev/eth_packetmaker.cc' object='eth_packetmaker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_packetmaker.lo `test -f 'iodev/eth_packetmaker.cc' || echo '$(srcdir)/'`iodev/eth_packetmaker.cc

pcipnic.lo: iodev/pcipnic.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pcipnic.lo -MD -MP -MF $(DEPDIR)/pcipnic.Tpo -c -o pcipnic.lo `test -f 'iodev/pcipnic.cc' || echo '$(srcdir)/'`iodev/pcipnic.cc
	$(am__mv) $(DEPDIR)/pcipnic.Tpo $(DEPDIR)/pcipnic.Plo
#	source='iodev/pcipnic.cc' object='pcipnic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pcipnic.lo `test -f 'iodev/pcipnic.cc' || echo '$(srcdir)/'`iodev/pcipnic.cc

usb_ohci.lo: iodev/usb_ohci.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT usb_ohci.lo -MD -MP -MF $(DEPDIR)/usb_ohci.Tpo -c -o usb_ohci.lo `test -f 'iodev/usb_ohci.cc' || echo '$(srcdir)/'`iodev/usb_ohci.cc
	$(am__mv) $(DEPDIR)/usb_ohci.Tpo $(DEPDIR)/usb_ohci.Plo
#	source='iodev/usb_ohci.cc' object='usb_ohci.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o usb_ohci.lo `test -f 'iodev/usb_ohci.cc' || echo '$(srcdir)/'`iodev/usb_ohci.cc

eth_tap.lo: iodev/eth_tap.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_tap.lo -MD -MP -MF $(DEPDIR)/eth_tap.Tpo -c -o eth_tap.lo `test -f 'iodev/eth_tap.cc' || echo '$(srcdir)/'`iodev/eth_tap.cc
	$(am__mv) $(DEPDIR)/eth_tap.Tpo $(DEPDIR)/eth_tap.Plo
#	source='iodev/eth_tap.cc' object='eth_tap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_tap.lo `test -f 'iodev/eth_tap.cc' || echo '$(srcdir)/'`iodev/eth_tap.cc

pcivga.lo: iodev/pcivga.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pcivga.lo -MD -MP -MF $(DEPDIR)/pcivga.Tpo -c -o pcivga.lo `test -f 'iodev/pcivga.cc' || echo '$(srcdir)/'`iodev/pcivga.cc
	$(am__mv) $(DEPDIR)/pcivga.Tpo $(DEPDIR)/pcivga.Plo
#	source='iodev/pcivga.cc' object='pcivga.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pcivga.lo `test -f 'iodev/pcivga.cc' || echo '$(srcdir)/'`iodev/pcivga.cc

usb_uhci.lo: iodev/usb_uhci.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT usb_uhci.lo -MD -MP -MF $(DEPDIR)/usb_uhci.Tpo -c -o usb_uhci.lo `test -f 'iodev/usb_uhci.cc' || echo '$(srcdir)/'`iodev/usb_uhci.cc
	$(am__mv) $(DEPDIR)/usb_uhci.Tpo $(DEPDIR)/usb_uhci.Plo
#	source='iodev/usb_uhci.cc' object='usb_uhci.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o usb_uhci.lo `test -f 'iodev/usb_uhci.cc' || echo '$(srcdir)/'`iodev/usb_uhci.cc

eth_tuntap.lo: iodev/eth_tuntap.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_tuntap.lo -MD -MP -MF $(DEPDIR)/eth_tuntap.Tpo -c -o eth_tuntap.lo `test -f 'iodev/eth_tuntap.cc' || echo '$(srcdir)/'`iodev/eth_tuntap.cc
	$(am__mv) $(DEPDIR)/eth_tuntap.Tpo $(DEPDIR)/eth_tuntap.Plo
#	source='iodev/eth_tuntap.cc' object='eth_tuntap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_tuntap.lo `test -f 'iodev/eth_tuntap.cc' || echo '$(srcdir)/'`iodev/eth_tuntap.cc

pic.lo: iodev/pic.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pic.lo -MD -MP -MF $(DEPDIR)/pic.Tpo -c -o pic.lo `test -f 'iodev/pic.cc' || echo '$(srcdir)/'`iodev/pic.cc
	$(am__mv) $(DEPDIR)/pic.Tpo $(DEPDIR)/pic.Plo
#	source='iodev/pic.cc' object='pic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pic.lo `test -f 'iodev/pic.cc' || echo '$(srcdir)/'`iodev/pic.cc

vga.lo: iodev/vga.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vga.lo -MD -MP -MF $(DEPDIR)/vga.Tpo -c -o vga.lo `test -f 'iodev/vga.cc' || echo '$(srcdir)/'`iodev/vga.cc
	$(am__mv) $(DEPDIR)/vga.Tpo $(DEPDIR)/vga.Plo
#	source='iodev/vga.cc' object='vga.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vga.lo `test -f 'iodev/vga.cc' || echo '$(srcdir)/'`iodev/vga.cc

eth_vde.lo: iodev/eth_vde.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_vde.lo -MD -MP -MF $(DEPDIR)/eth_vde.Tpo -c -o eth_vde.lo `test -f 'iodev/eth_vde.cc' || echo '$(srcdir)/'`iodev/eth_vde.cc
	$(am__mv) $(DEPDIR)/eth_vde.Tpo $(DEPDIR)/eth_vde.Plo
#	source='iodev/eth_vde.cc' object='eth_vde.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_vde.lo `test -f 'iodev/eth_vde.cc' || echo '$(srcdir)/'`iodev/eth_vde.cc

pit82c54.lo: iodev/pit82c54.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pit82c54.lo -MD -MP -MF $(DEPDIR)/pit82c54.Tpo -c -o pit82c54.lo `test -f 'iodev/pit82c54.cc' || echo '$(srcdir)/'`iodev/pit82c54.cc
	$(am__mv) $(DEPDIR)/pit82c54.Tpo $(DEPDIR)/pit82c54.Plo
#	source='iodev/pit82c54.cc' object='pit82c54.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pit82c54.lo `test -f 'iodev/pit82c54.cc' || echo '$(srcdir)/'`iodev/pit82c54.cc

virt_timer.lo: iodev/virt_timer.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT virt_timer.lo -MD -MP -MF $(DEPDIR)/virt_timer.Tpo -c -o virt_timer.lo `test -f 'iodev/virt_timer.cc' || echo '$(srcdir)/'`iodev/virt_timer.cc
	$(am__mv) $(DEPDIR)/virt_timer.Tpo $(DEPDIR)/virt_timer.Plo
#	source='iodev/virt_timer.cc' object='virt_timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o virt_timer.lo `test -f 'iodev/virt_timer.cc' || echo '$(srcdir)/'`iodev/virt_timer.cc

eth_vnet.lo: iodev/eth_vnet.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_vnet.lo -MD -MP -MF $(DEPDIR)/eth_vnet.Tpo -c -o eth_vnet.lo `test -f 'iodev/eth_vnet.cc' || echo '$(srcdir)/'`iodev/eth_vnet.cc
	$(am__mv) $(DEPDIR)/eth_vnet.Tpo $(DEPDIR)/eth_vnet.Plo
#	source='iodev/eth_vnet.cc' object='eth_vnet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_vnet.lo `test -f 'iodev/eth_vnet.cc' || echo '$(srcdir)/'`iodev/eth_vnet.cc

pit_wrap.lo: iodev/pit_wrap.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pit_wrap.lo -MD -MP -MF $(DEPDIR)/pit_wrap.Tpo -c -o pit_wrap.lo `test -f 'iodev/pit_wrap.cc' || echo '$(srcdir)/'`iodev/pit_wrap.cc
	$(am__mv) $(DEPDIR)/pit_wrap.Tpo $(DEPDIR)/pit_wrap.Plo
#	source='iodev/pit_wrap.cc' object='pit_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pit_wrap.lo `test -f 'iodev/pit_wrap.cc' || echo '$(srcdir)/'`iodev/pit_wrap.cc

vmware3.lo: iodev/vmware3.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmware3.lo -MD -MP -MF $(DEPDIR)/vmware3.Tpo -c -o vmware3.lo `test -f 'iodev/vmware3.cc' || echo '$(srcdir)/'`iodev/vmware3.cc
	$(am__mv) $(DEPDIR)/vmware3.Tpo $(DEPDIR)/vmware3.Plo
#	source='iodev/vmware3.cc' object='vmware3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmware3.lo `test -f 'iodev/vmware3.cc' || echo '$(srcdir)/'`iodev/vmware3.cc

eth_win32.lo: iodev/eth_win32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eth_win32.lo -MD -MP -MF $(DEPDIR)/eth_win32.Tpo -c -o eth_win32.lo `test -f 'iodev/eth_win32.cc' || echo '$(srcdir)/'`iodev/eth_win32.cc
	$(am__mv) $(DEPDIR)/eth_win32.Tpo $(DEPDIR)/eth_win32.Plo
#	source='iodev/eth_win32.cc' object='eth_win32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eth_win32.lo `test -f 'iodev/eth_win32.cc' || echo '$(srcdir)/'`iodev/eth_win32.cc

sb16.lo: iodev/sb16.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sb16.lo -MD -MP -MF $(DEPDIR)/sb16.Tpo -c -o sb16.lo `test -f 'iodev/sb16.cc' || echo '$(srcdir)/'`iodev/sb16.cc
	$(am__mv) $(DEPDIR)/sb16.Tpo $(DEPDIR)/sb16.Plo
#	source='iodev/sb16.cc' object='sb16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sb16.lo `test -f 'iodev/sb16.cc' || echo '$(srcdir)/'`iodev/sb16.cc

vmware4.lo: iodev/vmware4.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmware4.lo -MD -MP -MF $(DEPDIR)/vmware4.Tpo -c -o vmware4.lo `test -f 'iodev/vmware4.cc' || echo '$(srcdir)/'`iodev/vmware4.cc
	$(am__mv) $(DEPDIR)/vmware4.Tpo $(DEPDIR)/vmware4.Plo
#	source='iodev/vmware4.cc' object='vmware4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmware4.lo `test -f 'iodev/vmware4.cc' || echo '$(srcdir)/'`iodev/vmware4.cc

enh_dbg.lo: gui/enh_dbg.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT enh_dbg.lo -MD -MP -MF $(DEPDIR)/enh_dbg.Tpo -c -o enh_dbg.lo `test -f 'gui/enh_dbg.cc' || echo '$(srcdir)/'`gui/enh_dbg.cc
	$(am__mv) $(DEPDIR)/enh_dbg.Tpo $(DEPDIR)/enh_dbg.Plo
#	source='gui/enh_dbg.cc' object='enh_dbg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o enh_dbg.lo `test -f 'gui/enh_dbg.cc' || echo '$(srcdir)/'`gui/enh_dbg.cc

keymap.lo: gui/keymap.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keymap.lo -MD -MP -MF $(DEPDIR)/keymap.Tpo -c -o keymap.lo `test -f 'gui/keymap.cc' || echo '$(srcdir)/'`gui/keymap.cc
	$(am__mv) $(DEPDIR)/keymap.Tpo $(DEPDIR)/keymap.Plo
#	source='gui/keymap.cc' object='keymap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keymap.lo `test -f 'gui/keymap.cc' || echo '$(srcdir)/'`gui/keymap.cc

textconfig.lo: gui/textconfig.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT textconfig.lo -MD -MP -MF $(DEPDIR)/textconfig.Tpo -c -o textconfig.lo `test -f 'gui/textconfig.cc' || echo '$(srcdir)/'`gui/textconfig.cc
	$(am__mv) $(DEPDIR)/textconfig.Tpo $(DEPDIR)/textconfig.Plo
#	source='gui/textconfig.cc' object='textconfig.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o textconfig.lo `test -f 'gui/textconfig.cc' || echo '$(srcdir)/'`gui/textconfig.cc

gui.lo: gui/gui.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gui.lo -MD -MP -MF $(DEPDIR)/gui.Tpo -c -o gui.lo `test -f 'gui/gui.cc' || echo '$(srcdir)/'`gui/gui.cc
	$(am__mv) $(DEPDIR)/gui.Tpo $(DEPDIR)/gui.Plo
#	source='gui/gui.cc' object='gui.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gui.lo `test -f 'gui/gui.cc' || echo '$(srcdir)/'`gui/gui.cc

siminterface.lo: gui/siminterface.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT siminterface.lo -MD -MP -MF $(DEPDIR)/siminterface.Tpo -c -o siminterface.lo `test -f 'gui/siminterface.cc' || echo '$(srcdir)/'`gui/siminterface.cc
	$(am__mv) $(DEPDIR)/siminterface.Tpo $(DEPDIR)/siminterface.Plo
#	source='gui/siminterface.cc' object='siminterface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o siminterface.lo `test -f 'gui/siminterface.cc' || echo '$(srcdir)/'`gui/siminterface.cc

win32dialog.lo: gui/win32dialog.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT win32dialog.lo -MD -MP -MF $(DEPDIR)/win32dialog.Tpo -c -o win32dialog.lo `test -f 'gui/win32dialog.cc' || echo '$(srcdir)/'`gui/win32dialog.cc
	$(am__mv) $(DEPDIR)/win32dialog.Tpo $(DEPDIR)/win32dialog.Plo
#	source='gui/win32dialog.cc' object='win32dialog.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o win32dialog.lo `test -f 'gui/win32dialog.cc' || echo '$(srcdir)/'`gui/win32dialog.cc

win32.lo: gui/win32.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT win32.lo -MD -MP -MF $(DEPDIR)/win32.Tpo -c -o win32.lo `test -f 'gui/win32.cc' || echo '$(srcdir)/'`gui/win32.cc
	$(am__mv) $(DEPDIR)/win32.Tpo $(DEPDIR)/win32.Plo
#	source='gui/win32.cc' object='win32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o win32.lo `test -f 'gui/win32.cc' || echo '$(srcdir)/'`gui/win32.cc

x.lo: gui/x.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT x.lo -MD -MP -MF $(DEPDIR)/x.Tpo -c -o x.lo `test -f 'gui/x.cc' || echo '$(srcdir)/'`gui/x.cc
	$(am__mv) $(DEPDIR)/x.Tpo $(DEPDIR)/x.Plo
#	source='gui/x.cc' object='x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o x.lo `test -f 'gui/x.cc' || echo '$(srcdir)/'`gui/x.cc

dis_decode.lo: disasm/dis_decode.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dis_decode.lo -MD -MP -MF $(DEPDIR)/dis_decode.Tpo -c -o dis_decode.lo `test -f 'disasm/dis_decode.cc' || echo '$(srcdir)/'`disasm/dis_decode.cc
	$(am__mv) $(DEPDIR)/dis_decode.Tpo $(DEPDIR)/dis_decode.Plo
#	source='disasm/dis_decode.cc' object='dis_decode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dis_decode.lo `test -f 'disasm/dis_decode.cc' || echo '$(srcdir)/'`disasm/dis_decode.cc

resolve.lo: disasm/resolve.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resolve.lo -MD -MP -MF $(DEPDIR)/resolve.Tpo -c -o resolve.lo `test -f 'disasm/resolve.cc' || echo '$(srcdir)/'`disasm/resolve.cc
	$(am__mv) $(DEPDIR)/resolve.Tpo $(DEPDIR)/resolve.Plo
#	source='disasm/resolve.cc' object='resolve.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resolve.lo `test -f 'disasm/resolve.cc' || echo '$(srcdir)/'`disasm/resolve.cc

dis_groups.lo: disasm/dis_groups.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dis_groups.lo -MD -MP -MF $(DEPDIR)/dis_groups.Tpo -c -o dis_groups.lo `test -f 'disasm/dis_groups.cc' || echo '$(srcdir)/'`disasm/dis_groups.cc
	$(am__mv) $(DEPDIR)/dis_groups.Tpo $(DEPDIR)/dis_groups.Plo
#	source='disasm/dis_groups.cc' object='dis_groups.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dis_groups.lo `test -f 'disasm/dis_groups.cc' || echo '$(srcdir)/'`disasm/dis_groups.cc

syntax.lo: disasm/syntax.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT syntax.lo -MD -MP -MF $(DEPDIR)/syntax.Tpo -c -o syntax.lo `test -f 'disasm/syntax.cc' || echo '$(srcdir)/'`disasm/syntax.cc
	$(am__mv) $(DEPDIR)/syntax.Tpo $(DEPDIR)/syntax.Plo
#	source='disasm/syntax.cc' object='syntax.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o syntax.lo `test -f 'disasm/syntax.cc' || echo '$(srcdir)/'`disasm/syntax.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-pkglibLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pkglibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-pkglibLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkglibLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-pkglibLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
